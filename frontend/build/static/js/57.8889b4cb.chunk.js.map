{"version":3,"sources":["components/PageTitle.js","pages/charts/LineChart.js","pages/charts/LineAnnotationChart.js","pages/charts/SplineAreaChart.js","pages/charts/StackedAreaChart.js","pages/charts/BarChart.js","pages/charts/StackedBarChart.js","pages/charts/DonutChart.js","pages/charts/PieChart.js","pages/charts/MixedChart.js","pages/charts/index.js"],"names":["PageTitle","props","title","items","breadCrumbItems","Fragment","className","to","map","item","index","active","key","label","path","LineChart","Card","CardBody","options","chart","height","type","zoom","enabled","toolbar","show","colors","tooltip","theme","x","dataLabels","stroke","width","curve","text","align","style","fontSize","grid","row","opacity","borderColor","markers","size","xaxis","categories","yaxis","min","max","legend","position","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","series","name","data","LineAnnotationChart","apexLineChartWithAnnotationOpts","annotations","y","color","background","Date","getTime","orientation","points","marker","fillColor","strokeColor","radius","id","labels","SplineAreaChart","fixed","StackedAreaChart","apexAreaChart2Opts","stacked","events","selection","e","console","log","fill","gradient","opacityFrom","opacityTo","generateDayWiseTimeSeries","baseval","count","yrange","i","Math","floor","random","push","apexAreaChart2Data","BarChart","plotOptions","bar","horizontal","axisBorder","axisTicks","states","hover","filter","StackedBarChart","apexBarChartStackedOpts","formatter","val","undefined","DonutChart","verticalAlign","PieChart","MixedChart","columnWidth","inverseColors","shade","stops","shared","intersect","toFixed","ApexChart","Row","Col","xl"],"mappings":"qHAAA,8CAmCeA,IA5BG,SAACC,GACf,IAAMC,EAAQD,EAAMC,OAAS,GACvBC,EAAQF,EAAMG,iBAAmB,GACvC,OACI,kBAAC,IAAMC,SAAP,KAEI,kBAAC,IAAD,CAAYC,UAAU,iCAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMC,GAAG,KAAT,WAEHJ,EAAMK,KAAI,SAACC,EAAMC,GACd,OAAOD,EAAKE,OACR,kBAAC,IAAD,CAAgBA,QAAM,EAACC,IAAKF,GACvBD,EAAKI,OAGN,kBAAC,IAAD,CAAgBD,IAAKF,GACjB,kBAAC,IAAD,CAAMH,GAAIE,EAAKK,MAAOL,EAAKI,YAM/C,wBAAIP,UAAU,aAAaJ,M,2HCiFxBa,EAzGG,WA0Fd,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,yBACA,kBAAC,IAAD,CACIY,QA9FgB,CAC5BC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNC,KAAM,CACFC,SAAS,GAEbC,QAAS,CACLC,MAAM,IAGdC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfK,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJC,MAAO,CAAC,EAAG,GACXC,MAAO,UAEX/B,MAAO,CACHgC,KAAM,iCACNC,MAAO,OACPC,MAAO,CACHC,SAAU,SAGlBC,KAAM,CACFC,IAAK,CACDb,OAAQ,CAAC,cAAe,eACxBc,QAAS,IAEbC,YAAa,WAEjBC,QAAS,CACLN,MAAO,WACPO,KAAM,GAEVC,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OACvD3C,MAAO,CACHgC,KAAM,UAGdY,MAAO,CACH5C,MAAO,CACHgC,KAAM,eAEVa,IAAK,EACLC,IAAK,IAETC,OAAQ,CACJC,SAAU,MACVC,gBAAiB,QACjBC,UAAU,EACVC,SAAU,GACVC,SAAU,GAEdC,WAAY,CACR,CACIC,WAAY,IACZtC,QAAS,CACLC,MAAO,CACHK,QAAS,CACLC,MAAM,IAGdwB,OAAQ,CACJxB,MAAM,OAwBVgC,OAjBoB,CAChC,CACIC,KAAM,cACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACID,KAAM,aACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAWvBtC,KAAK,OACLf,UAAU,mBCkFfsD,EApLa,WACxB,IAAMC,EAAkC,CACpClC,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfqC,YAAa,CACThB,MAAO,CACH,CACIiB,EAAG,KACHtB,YAAa,UACb5B,MAAO,CACH4B,YAAa,UACbL,MAAO,CACH4B,MAAO,OACPC,WAAY,WAEhB/B,KAAM,aAIlBU,MAAO,CACH,CACIf,EAAG,IAAIqC,KAAK,eAAeC,UAC3B1B,YAAa,UACb5B,MAAO,CACH4B,YAAa,UACbL,MAAO,CACH4B,MAAO,OACPC,WAAY,WAEhB/B,KAAM,cAGd,CACIL,EAAG,IAAIqC,KAAK,eAAeC,UAC3B1B,YAAa,UACb5B,MAAO,CACH4B,YAAa,UACbL,MAAO,CACH4B,MAAO,OACPC,WAAY,WAEhBG,YAAa,aACblC,KAAM,mBAIlBmC,OAAQ,CACJ,CACIxC,EAAG,IAAIqC,KAAK,eAAeC,UAC3BJ,EAAG,OACHO,OAAQ,CACJ3B,KAAM,EACN4B,UAAW,OACXC,YAAa,UACbC,OAAQ,GAEZ5D,MAAO,CACH4B,YAAa,UACbY,QAAS,EACTjB,MAAO,CACH4B,MAAO,OACPC,WAAY,WAGhB/B,KAAM,uBAKtBf,MAAO,CACHC,OAAQ,IACRC,KAAM,OACNqD,GAAI,eAERC,OAAQ,CACJ,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,eAEJjD,OAAQ,CAAC,WACTI,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJC,MAAO,CAAC,GACRC,MAAO,YAEX/B,MAAO,CACHgC,KAAM,wBACNC,MAAO,QAEXS,MAAO,CACHvB,KAAM,YAEViB,KAAM,CACFC,IAAK,CACDb,OAAQ,CAAC,cAAe,eACxBc,QAAS,IAEbC,YAAa,WAEjBc,WAAY,CACR,CACIC,WAAY,IACZtC,QAAS,CACLC,MAAO,CACHK,QAAS,CACLC,MAAM,IAGdwB,OAAQ,CACJxB,MAAM,OAmC1B,OACI,kBAACT,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,+BACA,kBAAC,IAAD,CACIY,QAAS2C,EACTJ,OAlCwB,CACpC,CACIC,KAAM,SACNC,KAAM,CACF,QACA,KACA,OACA,OACA,OACA,OACA,OACA,OACA,QACA,OACA,OACA,OACA,QACA,OACA,QACA,OACA,QACA,QACA,OACA,WAYItC,KAAK,OACLf,UAAU,mBCnHfsE,EA1DS,WAgDpB,OACI,kBAAC5D,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,eACA,kBAAC,IAAD,CAAOY,QAnDQ,CACvBC,MAAO,CACHC,OAAQ,IACRC,KAAM,QAEVS,WAAY,CACRP,SAAS,GAEbQ,OAAQ,CACJC,MAAO,EACPC,MAAO,UAEXP,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEuB,OAAQ,CACJI,SAAU,IAEdT,MAAO,CACHC,WAAY,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,QAE3DlB,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,GACXoD,MAAO,CACHtD,SAAS,EACT2B,SAAU,aAGlBZ,KAAM,CACFC,IAAK,CACDb,OAAQ,CAAC,cAAe,eACxBc,QAAS,IAEbC,YAAa,YAmB2BgB,OAfrB,CACvB,CACIC,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAK,MAEpC,CACID,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAQqCtC,KAAK,OAAOf,UAAU,mBCwDvFwE,EA5GU,WACrB,IAAMC,EAAqB,CACvB5D,MAAO,CACHC,OAAQ,IACRC,KAAM,OACN2D,SAAS,EACTC,OAAQ,CACJC,UAAW,SAAS/D,EAAOgE,GACvBC,QAAQC,IAAI,IAAInB,KAAKiB,EAAEvC,MAAMG,SAIzCrB,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEI,WAAY,CACRP,SAAS,GAEbI,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfM,OAAQ,CACJC,MAAO,EACPC,MAAO,UAEXqD,KAAM,CACFC,SAAU,CACNhE,SAAS,EACTiE,YAAa,GACbC,UAAW,KAGnBxC,OAAQ,CACJC,SAAU,MACVC,gBAAiB,QAErBP,MAAO,CACHvB,KAAM,YAEViB,KAAM,CACFC,IAAK,CACDb,OAAQ,CAAC,cAAe,eACxBc,QAAS,IAEbC,YAAa,WAEjBc,WAAY,CACR,CACIC,WAAY,IACZtC,QAAS,CACLC,MAAO,CACHK,QAAS,CACLC,MAAM,QAQxBiE,EAA4B,SAACC,EAASC,EAAOC,GAG/C,IAFA,IAAIC,EAAI,EACJrC,EAAS,GACNqC,EAAIF,GAAO,CACd,IAAI/D,EAAI8D,EACJ5B,EAAIgC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAO7C,IAAM6C,EAAO9C,IAAM,IAAM8C,EAAO9C,IAE3EU,EAAOyC,KAAK,CAACrE,EAAGkC,IAChB4B,GAAW,MACXG,IAEJ,OAAOrC,GAGL0C,EAAqB,CACvB,CACIzC,KAAM,QACNC,KAAM+B,EAA0B,IAAIxB,KAAK,eAAeC,UAAW,GAAI,CACnEpB,IAAK,GACLC,IAAK,MAGb,CACIU,KAAM,QACNC,KAAM+B,EAA0B,IAAIxB,KAAK,eAAeC,UAAW,GAAI,CACnEpB,IAAK,GACLC,IAAK,MAIb,CACIU,KAAM,UACNC,KAAM+B,EAA0B,IAAIxB,KAAK,eAAeC,UAAW,GAAI,CACnEpB,IAAK,GACLC,IAAK,OAKjB,OACI,kBAAChC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,gBACA,kBAAC,IAAD,CAAOY,QAAS6D,EAAoBtB,OAAQ0C,EAAoB9E,KAAK,OAAOf,UAAU,mBClBvF8F,EApFE,WA0Eb,OACI,kBAACpF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,aACA,kBAAC,IAAD,CAAOY,QA7EM,CACrBC,MAAO,CACHC,OAAQ,IACRC,KAAM,MACNG,QAAS,CACLC,MAAM,IAGd4E,YAAa,CACTC,IAAK,CACDC,YAAY,EACZzE,WAAY,CACRoB,SAAU,SAItBvB,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfK,WAAY,CACRP,SAAS,EACT+B,SAAU,EACVlB,MAAO,CACHC,SAAU,OACVX,OAAQ,CAAC,UAGjBA,OAAQ,CAAC,UAAW,UAAW,UAAW,WAC1CK,OAAQ,CACJN,MAAM,EACNO,MAAO,EACPN,OAAQ,CAAC,SAGbkB,MAAO,CACHC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjD2D,WAAY,CACRxC,MAAO,WAEXyC,UAAW,CACPzC,MAAO,YAGflB,MAAO,CACH6B,OAAQ,CACJrB,SAAU,KAGlBL,OAAQ,CACJI,SAAU,IAEdqD,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhBtE,KAAM,CACFG,YAAa,YAmByBgB,OAfrB,CACrB,CACIC,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACID,KAAM,WACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAQiCtC,KAAK,MAAMf,UAAU,mBCkBlFuG,EAhGS,WACpB,IAAMC,EAA0B,CAC5B3F,MAAO,CACHC,OAAQ,IACRC,KAAM,MACN2D,SAAS,EACTxD,QAAS,CACLC,MAAM,IAGd4E,YAAa,CACTC,IAAK,CACDC,YAAY,IAGpBxE,OAAQ,CACJN,MAAM,GAEVmB,MAAO,CACHC,WAAY,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MACjD8B,OAAQ,CACJoC,UAAW,SAASC,GAChB,OAAOA,EAAM,OAIzBlE,MAAO,CACH5C,MAAO,CACHgC,UAAM+E,IAGdvF,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLoC,EAAG,CACCgD,UAAW,SAASC,GAChB,OAAOA,EAAM,MAGrBpF,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEf6D,KAAM,CACF9C,QAAS,GAEbkE,OAAQ,CACJC,MAAO,CACHC,OAAQ,SAGhB3D,OAAQ,CACJC,SAAU,MACVC,gBAAiB,UAErBb,KAAM,CACFG,YAAa,YA2BrB,OACI,kBAACzB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,qBACA,kBAAC,IAAD,CACIY,QAAS4F,EACTrD,OA7BgB,CAC5B,CACIC,KAAM,gBACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACID,KAAM,gBACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnC,CACID,KAAM,eACNC,KAAM,CAAC,GAAI,GAAI,GAAI,EAAG,GAAI,GAAI,KAElC,CACID,KAAM,eACNC,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE7B,CACID,KAAM,aACNC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAWvBtC,KAAK,MACLf,UAAU,mBClCf4G,EAvDI,WAuCf,OACI,kBAAClG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,eACA,kBAAC,IAAD,CACIY,QA3CM,CAClBC,MAAO,CACHC,OAAQ,IACRC,KAAM,OAEVsD,OAAQ,CAAC,WAAY,WAAY,WAAY,WAAY,YACzDjD,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfwB,OAAQ,CACJxB,MAAM,EACNyB,SAAU,SACVC,gBAAiB,SACjBgE,cAAe,SACf/D,UAAU,EACVf,SAAU,OACViB,QAAS,EACTD,SAAU,IAEdE,WAAY,CACR,CACIC,WAAY,IACZtC,QAAS,CACLC,MAAO,CACHC,OAAQ,KAEZ6B,OAAQ,CACJxB,MAAM,OAeVgC,OARM,CAAC,GAAI,GAAI,GAAI,GAAI,IASvBpC,KAAK,QACLD,OAAQ,IACRd,UAAU,mBCCf8G,EAjDE,WAuCb,OACI,kBAACpG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,aACA,kBAAC,IAAD,CAAOY,QA1CG,CAClBC,MAAO,CACHC,OAAQ,IACRC,KAAM,OAEVsD,OAAQ,CAAC,WAAY,WAAY,WAAY,WAAY,YACzDjD,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChEC,QAAS,CACLC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfwB,OAAQ,CACJxB,MAAM,EACNyB,SAAU,SACVC,gBAAiB,SACjBgE,cAAe,SACf/D,UAAU,EACVf,SAAU,OACViB,QAAS,EACTD,SAAU,IAEdE,WAAY,CACR,CACIC,WAAY,IACZtC,QAAS,CACLC,MAAO,CACHC,OAAQ,KAEZ6B,OAAQ,CACJxB,MAAM,OAaiBgC,OANrB,CAAC,GAAI,GAAI,GAAI,GAAI,IAM2BpC,KAAK,MAAMD,OAAQ,IAAKd,UAAU,mBCoEzF+G,EA/GI,WA+Ff,OACI,kBAACrG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,wBAAIX,UAAU,0BAAd,8BACA,kBAAC,IAAD,CACIY,QAnGI,CAChBC,MAAO,CACHC,OAAQ,IACRC,KAAM,OACN2D,SAAS,EACTxD,QAAS,CACLC,MAAM,IAGdM,OAAQ,CACJC,MAAO,CAAC,EAAG,EAAG,GACdC,MAAO,UAEXoE,YAAa,CACTC,IAAK,CACDgB,YAAa,QAGrB5F,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAChE4D,KAAM,CACF9C,QAAS,CAAC,IAAM,IAAM,GACtB+C,SAAU,CACNgC,eAAe,EACfC,MAAO,QACPnG,KAAM,WACNmE,YAAa,IACbC,UAAW,IACXgC,MAAO,CAAC,EAAG,IAAK,IAAK,OAG7B9C,OAAQ,CACJ,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,cAEJjC,QAAS,CACLC,KAAM,GAEVM,OAAQ,CACJI,SAAU,IAEdT,MAAO,CACHvB,KAAM,YAEVyB,MAAO,CACH5C,MAAO,CACHgC,KAAM,WAGdP,QAAS,CACL+F,QAAQ,EACRC,WAAW,EACX5D,EAAG,CACCgD,UAAW,SAAShD,GAChB,MAAiB,qBAANA,EACAA,EAAE6D,QAAQ,GAAK,UAEnB7D,IAGfnC,MAAO,OACPC,EAAG,CAAEJ,MAAM,IAEfa,KAAM,CACFG,YAAa,YA4BLgB,OAxBM,CAClB,CACIC,KAAM,SACNrC,KAAM,SACNsC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnD,CACID,KAAM,SACNrC,KAAM,OACNsC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAEnD,CACID,KAAM,SACNrC,KAAM,OACNsC,KAAM,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,MAWvCtC,KAAK,OACLD,OAAQ,IACRd,UAAU,mBC9BfuH,UAhEG,WACd,OACI,kBAAC,IAAMxH,SAAP,KACI,kBAACyH,EAAA,EAAD,CAAKxH,UAAU,cACX,kBAACyH,EAAA,EAAD,KACI,kBAAC/H,EAAA,EAAD,CACII,gBAAiB,CACb,CAAES,MAAO,SAAUC,KAAM,WACzB,CAAED,MAAO,OAAQC,KAAM,UAAWH,QAAQ,IAE9CT,MAAO,aAKnB,kBAAC4H,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,QAIR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,QAIR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,QAIR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,OAGJ,kBAACD,EAAA,EAAD,CAAKC,GAAI,GACL,kBAAC,EAAD,QAIR,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAAC,EAAD","file":"static/js/57.8889b4cb.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\n\n/**\n * Renders the PageTitle\n */\nconst PageTitle = (props) => {\n    const title = props.title || \"\";\n    const items = props.breadCrumbItems || \"\";\n    return (\n        <React.Fragment>\n            \n            <Breadcrumb className=\"float-right mt-1 font-size-14\">\n                <BreadcrumbItem>\n                    <Link to=\"/\">Shreyu</Link>\n                </BreadcrumbItem>\n                {items.map((item, index) => {\n                    return item.active ? (\n                        <BreadcrumbItem active key={index}>\n                            {item.label}\n                        </BreadcrumbItem>\n                    ) : (\n                            <BreadcrumbItem key={index}>\n                                <Link to={item.path}>{item.label}</Link>\n                            </BreadcrumbItem>\n                        );\n                })}\n            </Breadcrumb>\n\n            <h4 className=\"mb-1 mt-0\">{title}</h4>\n        </React.Fragment>\n    )\n}\n\nexport default PageTitle;","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// simple line chart\nconst LineChart = () => {\n    const apexLineChartWithLables = {\n        chart: {\n            height: 380,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n            toolbar: {\n                show: false,\n            },\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        title: {\n            text: 'Average High & Low Temperature',\n            align: 'left',\n            style: {\n                fontSize: '14px',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        markers: {\n            style: 'inverted',\n            size: 6,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n                text: 'Month',\n            },\n        },\n        yaxis: {\n            title: {\n                text: 'Temperature',\n            },\n            min: 5,\n            max: 40,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexLineChartWithLablesData = [\n        {\n            name: 'High - 2018',\n            data: [28, 29, 33, 36, 32, 32, 33],\n        },\n        {\n            name: 'Low - 2018',\n            data: [12, 11, 14, 18, 17, 13, 13],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Line with Data Labels</h4>\n                <Chart\n                    options={apexLineChartWithLables}\n                    series={apexLineChartWithLablesData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// line chart with annotations\nconst LineAnnotationChart = () => {\n    const apexLineChartWithAnnotationOpts = {\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        annotations: {\n            yaxis: [\n                {\n                    y: 8200,\n                    borderColor: '#0acf97',\n                    label: {\n                        borderColor: '#0acf97',\n                        style: {\n                            color: '#fff',\n                            background: '#0acf97',\n                        },\n                        text: 'Support',\n                    },\n                },\n            ],\n            xaxis: [\n                {\n                    x: new Date('23 Nov 2017').getTime(),\n                    borderColor: '#775DD0',\n                    label: {\n                        borderColor: '#775DD0',\n                        style: {\n                            color: '#fff',\n                            background: '#775DD0',\n                        },\n                        text: 'Anno Test',\n                    },\n                },\n                {\n                    x: new Date('03 Dec 2017').getTime(),\n                    borderColor: '#ffbc00',\n                    label: {\n                        borderColor: '#ffbc00',\n                        style: {\n                            color: '#fff',\n                            background: '#ffbc00',\n                        },\n                        orientation: 'horizontal',\n                        text: 'New Beginning',\n                    },\n                },\n            ],\n            points: [\n                {\n                    x: new Date('27 Nov 2017').getTime(),\n                    y: 8506.9,\n                    marker: {\n                        size: 8,\n                        fillColor: '#fff',\n                        strokeColor: '#fa5c7c',\n                        radius: 2,\n                    },\n                    label: {\n                        borderColor: '#fa5c7c',\n                        offsetY: 0,\n                        style: {\n                            color: '#fff',\n                            background: '#fa5c7c',\n                        },\n\n                        text: 'Point Annotation',\n                    },\n                },\n            ],\n        },\n        chart: {\n            height: 380,\n            type: 'line',\n            id: 'areachart-2',\n        },\n        labels: [\n            '13 Nov 2017',\n            '14 Nov 2017',\n            '15 Nov 2017',\n            '16 Nov 2017',\n            '17 Nov 2017',\n            '20 Nov 2017',\n            '21 Nov 2017',\n            '22 Nov 2017',\n            '23 Nov 2017',\n            '24 Nov 2017',\n            '27 Nov 2017',\n            '28 Nov 2017',\n            '29 Nov 2017',\n            '30 Nov 2017',\n            '01 Dec 2017',\n            '04 Dec 2017',\n            '05 Dec 2017',\n            '06 Dec 2017',\n            '07 Dec 2017',\n            '08 Dec 2017',\n        ],\n        colors: ['#39afd1'],\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: [3],\n            curve: 'straight',\n        },\n        title: {\n            text: 'Line with Annotations',\n            align: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#e9ecef'\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexLineChartWithAnnotationData = [\n        {\n            name: 'Prices',\n            data: [\n                8107.85,\n                8128,\n                8122.9,\n                8165.5,\n                8340.7,\n                8423.7,\n                8423.5,\n                8514.3,\n                8481.85,\n                8487.7,\n                8506.9,\n                8626.2,\n                8668.95,\n                8602.3,\n                8607.55,\n                8512.9,\n                8496.25,\n                8600.65,\n                8881.1,\n                9340.85,\n            ],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Line Chart with Annotations</h4>\n                <Chart\n                    options={apexLineChartWithAnnotationOpts}\n                    series={apexLineChartWithAnnotationData}\n                    type=\"line\"\n                    className=\"apex-charts\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default LineAnnotationChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// SplineAreaChart\nconst SplineAreaChart = () => {\n    const apexAreaChart1Opts = {\n        chart: {\n            height: 380,\n            type: 'area',\n        },\n        dataLabels: {\n            enabled: false,\n        },\n        stroke: {\n            width: 3,\n            curve: 'smooth',\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n        },\n        tooltip: {\n            theme: 'dark',\n            x: { show: false },\n            fixed: {\n                enabled: false,\n                position: 'topRight',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const apexAreaChart1Data = [\n        {\n            name: 'Series 1',\n            data: [31, 40, 28, 51, 42, 109, 100],\n        },\n        {\n            name: 'Series 2',\n            data: [11, 32, 45, 32, 34, 52, 41],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Spline Area</h4>\n                <Chart options={apexAreaChart1Opts} series={apexAreaChart1Data} type=\"area\" className=\"apex-charts\" />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default SplineAreaChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// StackedAreaChart\nconst StackedAreaChart = () => {\n    const apexAreaChart2Opts = {\n        chart: {\n            height: 422,\n            type: 'area',\n            stacked: true,\n            events: {\n                selection: function(chart, e) {\n                    console.log(new Date(e.xaxis.min));\n                },\n            },\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        dataLabels: {\n            enabled: false,\n        },\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        stroke: {\n            width: 2,\n            curve: 'smooth',\n        },\n        fill: {\n            gradient: {\n                enabled: true,\n                opacityFrom: 0.6,\n                opacityTo: 0.8,\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                },\n            },\n        ],\n    };\n\n    const generateDayWiseTimeSeries = (baseval, count, yrange) => {\n        var i = 0;\n        var series = [];\n        while (i < count) {\n            var x = baseval;\n            var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n            series.push([x, y]);\n            baseval += 86400000;\n            i++;\n        }\n        return series;\n    };\n\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 60,\n            }),\n        },\n        {\n            name: 'North',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 20,\n            }),\n        },\n\n        {\n            name: 'Central',\n            data: generateDayWiseTimeSeries(new Date('11 Feb 2017').getTime(), 20, {\n                min: 10,\n                max: 15,\n            }),\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Stacked Area</h4>\n                <Chart options={apexAreaChart2Opts} series={apexAreaChart2Data} type=\"area\" className=\"apex-charts\" />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// simple bar chart\nconst BarChart = () => {\n    const apexBarChartOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                dataLabels: {\n                    position: 'top',\n                },\n            },\n        },\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        dataLabels: {\n            enabled: true,\n            offsetX: -6,\n            style: {\n                fontSize: '12px',\n                colors: ['#fff'],\n            },\n        },\n        colors: [\"#5369f8\", \"#43d39e\", \"#f77e53\", \"#ffbe0b\"],\n        stroke: {\n            show: true,\n            width: 1,\n            colors: ['#fff'],\n        },\n\n        xaxis: {\n            categories: [2001, 2002, 2003, 2004, 2005, 2006, 2007],\n            axisBorder: {\n                color: '#d6ddea',\n            },\n            axisTicks: {\n                color: '#d6ddea',\n            }\n        },\n        yaxis: {\n            labels: {\n                offsetX: -10,\n            }\n        },\n        legend: {\n            offsetY: -10,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const apexBarChartData = [\n        {\n            name: 'Series 1',\n            data: [44, 55, 41, 64, 22, 43, 21],\n        },\n        {\n            name: 'Series 2',\n            data: [53, 32, 33, 52, 13, 44, 32],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Bar Chart</h4>\n                <Chart options={apexBarChartOpts} series={apexBarChartData} type=\"bar\" className=\"apex-charts\" />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// stacked bar chart\nconst StackedBarChart = () => {\n    const apexBarChartStackedOpts = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n            toolbar: {\n                show: false,\n            },\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        stroke: {\n            show: false,\n        },\n        xaxis: {\n            categories: [2008, 2009, 2010, 2011, 2012, 2013, 2014],\n            labels: {\n                formatter: function(val) {\n                    return val + 'K';\n                },\n            },\n        },\n        yaxis: {\n            title: {\n                text: undefined,\n            },\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        tooltip: {\n            y: {\n                formatter: function(val) {\n                    return val + 'K';\n                },\n            },\n            theme: 'dark',\n            x: { show: false }\n        },\n        fill: {\n            opacity: 1,\n        },\n        states: {\n            hover: {\n                filter: 'none',\n            },\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'center',\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const apexBarChartStackedData = [\n        {\n            name: 'Marine Sprite',\n            data: [44, 55, 41, 37, 22, 43, 21],\n        },\n        {\n            name: 'Striking Calf',\n            data: [53, 32, 33, 52, 13, 43, 32],\n        },\n        {\n            name: 'Tank Picture',\n            data: [12, 17, 11, 9, 15, 11, 20],\n        },\n        {\n            name: 'Bucket Slope',\n            data: [9, 7, 5, 8, 6, 9, 4],\n        },\n        {\n            name: 'Reborn Kid',\n            data: [25, 12, 19, 32, 25, 24, 10],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Stacked Bar Chart</h4>\n                <Chart\n                    options={apexBarChartStackedOpts}\n                    series={apexBarChartStackedData}\n                    type=\"bar\"\n                    className=\"apex-charts\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default StackedBarChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// simple donut chart\nconst DonutChart = () => {\n    const apexDonutOpts = {\n        chart: {\n            height: 320,\n            type: 'pie',\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            verticalAlign: 'middle',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexDonutData = [44, 55, 41, 17, 15];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Donut Chart</h4>\n                <Chart\n                    options={apexDonutOpts}\n                    series={apexDonutData}\n                    type=\"donut\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// simple pie chart\nconst PieChart = () => {\n    const apexDonutOpts = {\n        chart: {\n            height: 320,\n            type: 'pie',\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        tooltip: {\n            theme: 'dark',\n            x: { show: false }\n        },\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            verticalAlign: 'middle',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: -10,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const apexDonutData = [44, 55, 41, 17, 15];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Pie Chart</h4>\n                <Chart options={apexDonutOpts} series={apexDonutData} type=\"pie\" height={320} className=\"apex-charts\" />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card, CardBody } from 'reactstrap';\n\n// Mixed chart\nconst MixedChart = () => {\n    var apexMixedOpts = {\n        chart: {\n            height: 380,\n            type: 'line',\n            stacked: false,\n            toolbar: {\n                show: false,\n            },\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        colors: ['#5369f8', '#43d39e', '#f77e53', '#1ce1ac', '#25c2e3', '#ffbe0b'],\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: [\n            '01/01/2003',\n            '02/01/2003',\n            '03/01/2003',\n            '04/01/2003',\n            '05/01/2003',\n            '06/01/2003',\n            '07/01/2003',\n            '08/01/2003',\n            '09/01/2003',\n            '10/01/2003',\n            '11/01/2003',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: -10,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            title: {\n                text: 'Points',\n            },\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function(y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n            theme: 'dark',\n            x: { show: false }\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const apexMixedData = [\n        {\n            name: 'Team A',\n            type: 'column',\n            data: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\n        },\n        {\n            name: 'Team B',\n            type: 'area',\n            data: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\n        },\n        {\n            name: 'Team C',\n            type: 'line',\n            data: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\n        },\n    ];\n\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-3\">Line, Bar and Area (Mixed)</h4>\n                <Chart\n                    options={apexMixedOpts}\n                    series={apexMixedData}\n                    type=\"line\"\n                    height={320}\n                    className=\"apex-charts\"\n                />\n            </CardBody>\n        </Card>\n    );\n};\n\nexport default MixedChart;\n","// @flow\nimport React from 'react';\nimport { Row, Col } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nimport LineChart from './LineChart';\nimport LineAnnotationChart from './LineAnnotationChart';\nimport SplineAreaChart from './SplineAreaChart';\nimport StackedAreaChart from './StackedAreaChart';\nimport BarChart from './BarChart';\nimport StackedBarChart from './StackedBarChart';\nimport DonutChart from './DonutChart';\nimport PieChart from './PieChart';\nimport MixedChart from './MixedChart';\n\nconst ApexChart = () => {\n    return (\n        <React.Fragment>\n            <Row className=\"page-title\">\n                <Col>\n                    <PageTitle\n                        breadCrumbItems={[\n                            { label: 'Charts', path: '/charts' },\n                            { label: 'Apex', path: '/charts', active: true },\n                        ]}\n                        title={'Charts'}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart />\n                </Col>\n\n                <Col xl={6}>\n                    <LineAnnotationChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <SplineAreaChart />\n                </Col>\n\n                <Col xl={6}>\n                    <StackedAreaChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BarChart />\n                </Col>\n\n                <Col xl={6}>\n                    <StackedBarChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <DonutChart />\n                </Col>\n\n                <Col xl={6}>\n                    <PieChart />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <MixedChart />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default ApexChart;\n"],"sourceRoot":""}