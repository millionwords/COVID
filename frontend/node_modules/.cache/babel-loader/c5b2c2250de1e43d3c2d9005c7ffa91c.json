{"ast":null,"code":"import _regeneratorRuntime from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toConsumableArray from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _createForOfIteratorHelper from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(initMenuAndItems),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(changeActiveMenuFromLocation),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(watchMenuInit),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(watchMenuChange),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(appMenuSaga);import{all,call,put,fork,takeEvery}from'redux-saga/effects';import{INIT_MENU,HIDE_SURVEY,CHANGE_ACTIVE_MENU_FROM_LOCATION}from'./constants';import{authProtectedRoutes as routes}from'../../routes';import assignIds from'./utils';import{initMenuSuccess,changeActiveMenuFromLocationSuccess}from'./actions';/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */var getActivatedMenuItemIds=function getActivatedMenuItemIds(menuItems){var matchingItems=[];var _iterator=_createForOfIteratorHelper(menuItems),_step;try{for(_iterator.s();!(_step=_iterator.n()).done;){var menuItem=_step.value;if(window.location.pathname.indexOf(menuItem.path)===0){matchingItems.push(menuItem.id);}if(typeof menuItem.children!=='undefined'){matchingItems=[].concat(_toConsumableArray(matchingItems),_toConsumableArray(getActivatedMenuItemIds(menuItem.children)));}}}catch(err){_iterator.e(err);}finally{_iterator.f();}return matchingItems;};/**\r\n * Initilizes the menu\r\n */function initMenuAndItems(){var menuItems;return _regeneratorRuntime.wrap(function initMenuAndItems$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;menuItems=assignIds(routes);_context.next=4;return put(initMenuSuccess(menuItems));case 4:_context.next=8;break;case 6:_context.prev=6;_context.t0=_context[\"catch\"](0);case 8:case\"end\":return _context.stop();}}},_marked,null,[[0,6]]);}/**\r\n * change the active menu item based on location\r\n */function changeActiveMenuFromLocation(){var menuItems,activatedMenuItemIds;return _regeneratorRuntime.wrap(function changeActiveMenuFromLocation$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;menuItems=assignIds(routes);_context2.next=4;return call(getActivatedMenuItemIds,menuItems);case 4:activatedMenuItemIds=_context2.sent;_context2.next=7;return put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));case 7:_context2.next=11;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);case 11:case\"end\":return _context2.stop();}}},_marked2,null,[[0,9]]);}/**\r\n * Watchers\r\n */export function watchMenuInit(){return _regeneratorRuntime.wrap(function watchMenuInit$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return takeEvery(INIT_MENU,initMenuAndItems);case 2:case\"end\":return _context3.stop();}}},_marked3);}export function watchMenuChange(){return _regeneratorRuntime.wrap(function watchMenuChange$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION,changeActiveMenuFromLocation);case 2:case\"end\":return _context4.stop();}}},_marked4);}function appMenuSaga(){return _regeneratorRuntime.wrap(function appMenuSaga$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return all([fork(watchMenuInit),fork(watchMenuChange)]);case 2:case\"end\":return _context5.stop();}}},_marked5);}export default appMenuSaga;","map":{"version":3,"sources":["/root/home/covid/frontend/src/redux/appMenu/saga.js"],"names":["initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","all","call","put","fork","takeEvery","INIT_MENU","HIDE_SURVEY","CHANGE_ACTIVE_MENU_FROM_LOCATION","authProtectedRoutes","routes","assignIds","initMenuSuccess","changeActiveMenuFromLocationSuccess","getActivatedMenuItemIds","menuItems","matchingItems","menuItem","window","location","pathname","indexOf","path","push","id","children","activatedMenuItemIds"],"mappings":"yfA6BUA,gB,iDAYAC,4B,iDAWOC,a,iDAIAC,e,iDAIPC,W,EA3DV,OAASC,GAAT,CAAcC,IAAd,CAAoBC,GAApB,CAAyBC,IAAzB,CAA+BC,SAA/B,KAAgD,oBAAhD,CAEA,OAASC,SAAT,CAAoBC,WAApB,CAAiCC,gCAAjC,KAAyE,aAAzE,CACA,OAASC,mBAAmB,GAAIC,CAAAA,MAAhC,KAA8C,cAA9C,CACA,MAAOC,CAAAA,SAAP,KAAsB,SAAtB,CACA,OAASC,eAAT,CAA0BC,mCAA1B,KAAqE,WAArE,CAEA;;;GAIA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,SAAS,CAAI,CACzC,GAAIC,CAAAA,aAAa,CAAG,EAApB,CADyC,yCAEpBD,SAFoB,YAEzC,+CAAgC,IAAvBE,CAAAA,QAAuB,aAC5B,GAAIC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,OAAzB,CAAiCJ,QAAQ,CAACK,IAA1C,IAAoD,CAAxD,CAA2D,CACvDN,aAAa,CAACO,IAAd,CAAmBN,QAAQ,CAACO,EAA5B,EACH,CAED,GAAI,MAAOP,CAAAA,QAAQ,CAACQ,QAAhB,GAA6B,WAAjC,CAA8C,CAC1CT,aAAa,8BAAOA,aAAP,qBAAyBF,uBAAuB,CAACG,QAAQ,CAACQ,QAAV,CAAhD,EAAb,CACH,CACJ,CAVwC,qDAWzC,MAAOT,CAAAA,aAAP,CACH,CAZD,CAcA;;GAGA,QAAUpB,CAAAA,gBAAV,0JAEcmB,SAFd,CAE0BJ,SAAS,CAACD,MAAD,CAFnC,iBAGQ,MAAMP,CAAAA,GAAG,CAACS,eAAe,CAACG,SAAD,CAAhB,CAAT,CAHR,wJASA;;GAGA,QAAUlB,CAAAA,4BAAV,+LAEckB,SAFd,CAE0BJ,SAAS,CAACD,MAAD,CAFnC,kBAGqC,MAAMR,CAAAA,IAAI,CAACY,uBAAD,CAA0BC,SAA1B,CAAV,CAHrC,OAGcW,oBAHd,iCAIQ,MAAMvB,CAAAA,GAAG,CAACU,mCAAmC,CAACa,oBAAD,CAApC,CAAT,CAJR,gKAQA;;GAGA,MAAO,SAAU5B,CAAAA,aAAV,6IACH,MAAMO,CAAAA,SAAS,CAACC,SAAD,CAAYV,gBAAZ,CAAf,CADG,wDAIP,MAAO,SAAUG,CAAAA,eAAV,+IACH,MAAMM,CAAAA,SAAS,CAACG,gCAAD,CAAmCX,4BAAnC,CAAf,CADG,wDAIP,QAAUG,CAAAA,WAAV,2IACI,MAAMC,CAAAA,GAAG,CAAC,CAACG,IAAI,CAACN,aAAD,CAAL,CAAsBM,IAAI,CAACL,eAAD,CAA1B,CAAD,CAAT,CADJ,wDAIA,cAAeC,CAAAA,WAAf","sourcesContent":["// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, HIDE_SURVEY, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n"]},"metadata":{},"sourceType":"module"}