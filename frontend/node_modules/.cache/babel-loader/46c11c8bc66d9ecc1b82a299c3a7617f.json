{"ast":null,"code":"import _classCallCheck from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/home/covid/frontend/src/pages/dashboard/Statistics.js\";\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Row, Col } from 'reactstrap';\nimport * as FeatherIcon from 'react-feather';\nimport StatisticsChartWidget from '../../components/StatisticsChartWidget';\nimport StatisticsWidget from '../../components/StatisticsWidget'; // const options = {\n//     chart: {\n//         height: 120,\n//         type: 'donut',\n//         toolbar: {\n//             show: false,\n//         },\n//         parentHeightOffset: 0,\n//     },\n//     colors: [\"#5369f8\", \"#43d39e\"],\n//     grid: {\n//         borderColor: '#f1f3fa',\n//         padding: {\n//             left: 0,\n//             right: 0,\n//         },\n//     },\n//     plotOptions: {\n//         pie: {\n//             donut: {\n//                 size: '70%',\n//             },\n//             expandOnClick: false\n//         }\n//     },\n//     legend: {\n//         show: true,\n//         position: 'right',\n//         horizontalAlign: 'left',\n//         itemMargin: {\n//             horizontal: 6,\n//             vertical: 3\n//         }\n//     },\n//     labels: ['Clothes 44k', 'Smartphons 55k'],\n//     responsive: [{\n//         breakpoint: 480,\n//         options: {\n//             legend: {\n//                 position: 'bottom'\n//             }\n//         }\n//     }],\n//     tooltip: {\n//         y: {\n//             formatter: function(value) { return value + \"k\" }\n//         },\n//     }\n// };\n// const tdata = [1.5658, 98.4342];\n\nvar Statistics = /*#__PURE__*/function (_React$Component) {\n  _inherits(Statistics, _React$Component);\n\n  var _super = _createSuper(Statistics);\n\n  function Statistics(props) {\n    var _this;\n\n    _classCallCheck(this, Statistics);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: null,\n      chart1: null,\n      chart2: null\n    };\n    return _this;\n  }\n\n  _createClass(Statistics, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"\".concat(process.env.REACT_APP_SERVER, \"/getInfo\")).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        console.log(response);\n\n        _this2.setState({\n          data: response\n        });\n\n        _this2.setState({\n          chart1: {\n            option: {\n              chart: {\n                height: 120,\n                type: 'donut',\n                toolbar: {\n                  show: false\n                },\n                parentHeightOffset: 0\n              },\n              colors: [\"#5369f8\", \"#43d39e\"],\n              grid: {\n                borderColor: '#f1f3fa',\n                padding: {\n                  left: 0,\n                  right: 0\n                }\n              },\n              plotOptions: {\n                pie: {\n                  donut: {\n                    size: '70%'\n                  },\n                  expandOnClick: false\n                }\n              },\n              legend: {\n                show: true,\n                position: 'right',\n                horizontalAlign: 'left',\n                itemMargin: {\n                  horizontal: 6,\n                  vertical: 3\n                }\n              },\n              labels: ['fatality rate', 'non-fatality'],\n              responsive: [{\n                breakpoint: 480,\n                options: {\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }],\n              tooltip: {\n                y: {\n                  formatter: function formatter(value) {\n                    return value + \"k\";\n                  }\n                }\n              }\n            },\n            data: [parseInt(response[0].FR), 100 - response[0].FR]\n          }\n        }); // console.log(this.state.data);\n\n\n        _this2.setState({\n          chart2: {\n            option: {\n              chart: {\n                height: 120,\n                type: 'donut',\n                toolbar: {\n                  show: false\n                },\n                parentHeightOffset: 0\n              },\n              colors: [\"#5369f8\", \"#43d39e\"],\n              grid: {\n                borderColor: '#f1f3fa',\n                padding: {\n                  left: 0,\n                  right: 0\n                }\n              },\n              plotOptions: {\n                pie: {\n                  donut: {\n                    size: '70%'\n                  },\n                  expandOnClick: false\n                }\n              },\n              legend: {\n                show: true,\n                position: 'right',\n                horizontalAlign: 'left',\n                itemMargin: {\n                  horizontal: 6,\n                  vertical: 3\n                }\n              },\n              labels: ['recovery rate', 'non-recovery'],\n              responsive: [{\n                breakpoint: 480,\n                options: {\n                  legend: {\n                    position: 'bottom'\n                  }\n                }\n              }],\n              tooltip: {\n                y: {\n                  formatter: function formatter(value) {\n                    return value + \"k\";\n                  }\n                }\n              }\n            },\n            data: [parseInt(response[0].PR), 100 - response[0].PR]\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.data == null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 19\n          }\n        });\n      }\n\n      if (this.state.chart1 == null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }\n        });\n      }\n\n      if (this.state.chart2 == null) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 19\n          }\n        });\n      }\n\n      var data = this.state.data[0]; ///console.log(this.state.chart1.option)\n\n      var options = this.state.chart1.option;\n      var tdata = this.state.chart1.data;\n      var options2 = this.state.chart1.option;\n      var tdata2 = this.state.chart1.data;\n      console.log(data);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Confirmed\",\n        title: data.totalConfirmed,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Active\",\n        title: data.activeCases,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Recovered\",\n        title: data.activeCases,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Deceased\",\n        title: data.totalDeaths,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-warning\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }\n      }))), /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Total Critical\",\n        title: data.totalCritical,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-secondary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Daily Cases Confirmed\",\n        title: data.dailyConfirmed,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Fatality Rate\",\n        title: data.FR,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 17\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 6,\n        xl: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(StatisticsWidget, {\n        description: \"Recovery Rate\",\n        title: data.PR,\n        icon: FeatherIcon.BarChart2,\n        iconClass: \"icon-dual-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }]);\n\n  return Statistics;\n}(React.Component);\n\n;\nexport default Statistics;","map":{"version":3,"sources":["/root/home/covid/frontend/src/pages/dashboard/Statistics.js"],"names":["React","Chart","Row","Col","FeatherIcon","StatisticsChartWidget","StatisticsWidget","Statistics","props","state","data","chart1","chart2","fetch","process","env","REACT_APP_SERVER","then","response","json","console","log","setState","option","chart","height","type","toolbar","show","parentHeightOffset","colors","grid","borderColor","padding","left","right","plotOptions","pie","donut","size","expandOnClick","legend","position","horizontalAlign","itemMargin","horizontal","vertical","labels","responsive","breakpoint","options","tooltip","y","formatter","value","parseInt","FR","PR","tdata","options2","tdata2","totalConfirmed","BarChart2","activeCases","totalDeaths","totalCritical","dailyConfirmed","Component"],"mappings":";;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,YAAzB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,qBAAP,MAAkC,wCAAlC;AACA,OAAOC,gBAAP,MAA6B,mCAA7B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;IAEMC,U;;;;;AACF,sBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAE,IADC;AAEPC,MAAAA,MAAM,EAAE,IAFD;AAGPC,MAAAA,MAAM,EAAE;AAHD,KAAX;AAFc;AAOjB;;;;wCAEkB;AAAA;;AAChBC,MAAAA,KAAK,WAAIC,OAAO,CAACC,GAAR,CAAYC,gBAAhB,cAAL,CACCC,IADD,CACM,UAAAC,QAAQ;AAAA,eAAGA,QAAQ,CAACC,IAAT,EAAH;AAAA,OADd,EAECF,IAFD,CAEM,UAAAC,QAAQ,EAAE;AACZE,QAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AAACZ,UAAAA,IAAI,EAAEQ;AAAP,SAAd;;AACA,QAAA,MAAI,CAACI,QAAL,CAAc;AACTX,UAAAA,MAAM,EAAE;AACJY,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,MAAM,EAAE,GADL;AAEHC,gBAAAA,IAAI,EAAE,OAFH;AAGHC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAE;AADD,iBAHN;AAMHC,gBAAAA,kBAAkB,EAAE;AANjB,eADH;AASJC,cAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CATJ;AAUJC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,WAAW,EAAE,SADX;AAEFC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAE,CADD;AAELC,kBAAAA,KAAK,EAAE;AAFF;AAFP,eAVF;AAiBJC,cAAAA,WAAW,EAAE;AACTC,gBAAAA,GAAG,EAAE;AACDC,kBAAAA,KAAK,EAAE;AACHC,oBAAAA,IAAI,EAAE;AADH,mBADN;AAIDC,kBAAAA,aAAa,EAAE;AAJd;AADI,eAjBT;AAyBJC,cAAAA,MAAM,EAAE;AACJb,gBAAAA,IAAI,EAAE,IADF;AAEJc,gBAAAA,QAAQ,EAAE,OAFN;AAGJC,gBAAAA,eAAe,EAAE,MAHb;AAIJC,gBAAAA,UAAU,EAAE;AACRC,kBAAAA,UAAU,EAAE,CADJ;AAERC,kBAAAA,QAAQ,EAAE;AAFF;AAJR,eAzBJ;AAkCHC,cAAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,cAAlB,CAlCL;AAmCJC,cAAAA,UAAU,EAAE,CAAC;AACTC,gBAAAA,UAAU,EAAE,GADH;AAETC,gBAAAA,OAAO,EAAE;AAELT,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,QAAQ,EAAE;AADN;AAFH;AAFA,eAAD,CAnCR;AA4CJS,cAAAA,OAAO,EAAE;AACLC,gBAAAA,CAAC,EAAE;AACCC,kBAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgB;AAAE,2BAAOA,KAAK,GAAG,GAAf;AAAoB;AADlD;AADE;AA5CL,aADJ;AAoDR5C,YAAAA,IAAI,EAAE,CAAC6C,QAAQ,CAACrC,QAAQ,CAAC,CAAD,CAAR,CAAYsC,EAAb,CAAT,EAA2B,MAAItC,QAAQ,CAAC,CAAD,CAAR,CAAYsC,EAA3C;AApDE;AADC,SAAd,EAHY,CA4Db;;;AACA,QAAA,MAAI,CAAClC,QAAL,CAAc;AACZV,UAAAA,MAAM,EAAE;AACJW,YAAAA,MAAM,EAAE;AACJC,cAAAA,KAAK,EAAE;AACHC,gBAAAA,MAAM,EAAE,GADL;AAEHC,gBAAAA,IAAI,EAAE,OAFH;AAGHC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAE;AADD,iBAHN;AAMHC,gBAAAA,kBAAkB,EAAE;AANjB,eADH;AASJC,cAAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,CATJ;AAUJC,cAAAA,IAAI,EAAE;AACFC,gBAAAA,WAAW,EAAE,SADX;AAEFC,gBAAAA,OAAO,EAAE;AACLC,kBAAAA,IAAI,EAAE,CADD;AAELC,kBAAAA,KAAK,EAAE;AAFF;AAFP,eAVF;AAiBJC,cAAAA,WAAW,EAAE;AACTC,gBAAAA,GAAG,EAAE;AACDC,kBAAAA,KAAK,EAAE;AACHC,oBAAAA,IAAI,EAAE;AADH,mBADN;AAIDC,kBAAAA,aAAa,EAAE;AAJd;AADI,eAjBT;AAyBJC,cAAAA,MAAM,EAAE;AACJb,gBAAAA,IAAI,EAAE,IADF;AAEJc,gBAAAA,QAAQ,EAAE,OAFN;AAGJC,gBAAAA,eAAe,EAAE,MAHb;AAIJC,gBAAAA,UAAU,EAAE;AACRC,kBAAAA,UAAU,EAAE,CADJ;AAERC,kBAAAA,QAAQ,EAAE;AAFF;AAJR,eAzBJ;AAkCHC,cAAAA,MAAM,EAAE,CAAC,eAAD,EAAkB,cAAlB,CAlCL;AAmCJC,cAAAA,UAAU,EAAE,CAAC;AACTC,gBAAAA,UAAU,EAAE,GADH;AAETC,gBAAAA,OAAO,EAAE;AAELT,kBAAAA,MAAM,EAAE;AACJC,oBAAAA,QAAQ,EAAE;AADN;AAFH;AAFA,eAAD,CAnCR;AA4CJS,cAAAA,OAAO,EAAE;AACLC,gBAAAA,CAAC,EAAE;AACCC,kBAAAA,SAAS,EAAE,mBAASC,KAAT,EAAgB;AAAE,2BAAOA,KAAK,GAAG,GAAf;AAAoB;AADlD;AADE;AA5CL,aADJ;AAoDR5C,YAAAA,IAAI,EAAE,CAAC6C,QAAQ,CAACrC,QAAQ,CAAC,CAAD,CAAR,CAAYuC,EAAb,CAAT,EAA2B,MAAIvC,QAAQ,CAAC,CAAD,CAAR,CAAYuC,EAA3C;AApDE;AADI,SAAd;AAyDF,OAxHD;AAyHF;;;6BACO;AAEJ,UAAG,KAAKhD,KAAL,CAAWC,IAAX,IAAiB,IAApB,EAAyB;AACrB,4BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AACH;;AACD,UAAG,KAAKD,KAAL,CAAWE,MAAX,IAAmB,IAAtB,EAA2B;AACvB,4BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AACH;;AACD,UAAG,KAAKF,KAAL,CAAWG,MAAX,IAAmB,IAAtB,EAA2B;AACvB,4BAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAN;AACH;;AACD,UAAMF,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAX,CAAgB,CAAhB,CAAb,CAXI,CAYJ;;AACA,UAAMwC,OAAO,GAAG,KAAKzC,KAAL,CAAWE,MAAX,CAAkBY,MAAlC;AACA,UAAMmC,KAAK,GAAG,KAAKjD,KAAL,CAAWE,MAAX,CAAkBD,IAAhC;AACA,UAAMiD,QAAQ,GAAG,KAAKlD,KAAL,CAAWE,MAAX,CAAkBY,MAAnC;AACA,UAAMqC,MAAM,GAAG,KAAKnD,KAAL,CAAWE,MAAX,CAAkBD,IAAjC;AACAU,MAAAA,OAAO,CAACC,GAAR,CAAYX,IAAZ;AACJ,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,WAA9B;AAA0C,QAAA,KAAK,EAAEA,IAAI,CAACmD,cAAtD;AAAsE,QAAA,IAAI,EAAEzD,WAAW,CAAC0D,SAAxF;AAAmG,QAAA,SAAS,EAAC,mBAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAKI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,QAA9B;AAAuC,QAAA,KAAK,EAAEpD,IAAI,CAACqD,WAAnD;AAAgE,QAAA,IAAI,EAAE3D,WAAW,CAAC0D,SAAlF;AAA6F,QAAA,SAAS,EAAC,kBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALJ,eASI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,WAA9B;AAA0C,QAAA,KAAK,EAAEpD,IAAI,CAACqD,WAAtD;AAAmE,QAAA,IAAI,EAAE3D,WAAW,CAAC0D,SAArF;AAAgG,QAAA,SAAS,EAAC,mBAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CATJ,eAaI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,UAA9B;AAAyC,QAAA,KAAK,EAAEpD,IAAI,CAACsD,WAArD;AAAkE,QAAA,IAAI,EAAE5D,WAAW,CAAC0D,SAApF;AAA+F,QAAA,SAAS,EAAC,mBAAzG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAbJ,CADJ,eAkBI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,gBAA9B;AAA+C,QAAA,KAAK,EAAEpD,IAAI,CAACuD,aAA3D;AAA0E,QAAA,IAAI,EAAE7D,WAAW,CAAC0D,SAA5F;AAAuG,QAAA,SAAS,EAAC,qBAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADA,eAKI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,uBAA9B;AAAsD,QAAA,KAAK,EAAEpD,IAAI,CAACwD,cAAlE;AAAkF,QAAA,IAAI,EAAE9D,WAAW,CAAC0D,SAApG;AAA+G,QAAA,SAAS,EAAC,gBAAzH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CALJ,eASI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,eAA9B;AAA8C,QAAA,KAAK,EAAEpD,IAAI,CAAC8C,EAA1D;AAA8D,QAAA,IAAI,EAAEpD,WAAW,CAAC0D,SAAhF;AAA2F,QAAA,SAAS,EAAC,gBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CATJ,eAYI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,EAAE,EAAE,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,gBAAD;AAAkB,QAAA,WAAW,EAAC,eAA9B;AAA8C,QAAA,KAAK,EAAEpD,IAAI,CAAC+C,EAA1D;AAA8D,QAAA,IAAI,EAAErD,WAAW,CAAC0D,SAAhF;AAA2F,QAAA,SAAS,EAAC,gBAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,CAZJ,CAlBJ,CADJ;AAsCiB;;;;EA7LI9D,KAAK,CAACmE,S;;AA8L9B;AAED,eAAe5D,UAAf","sourcesContent":["// @flow\nimport React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Row, Col } from 'reactstrap';\nimport * as FeatherIcon from 'react-feather';\nimport StatisticsChartWidget from '../../components/StatisticsChartWidget';\nimport StatisticsWidget from '../../components/StatisticsWidget';\n\n\n// const options = {\n//     chart: {\n//         height: 120,\n//         type: 'donut',\n//         toolbar: {\n//             show: false,\n//         },\n//         parentHeightOffset: 0,\n//     },\n//     colors: [\"#5369f8\", \"#43d39e\"],\n//     grid: {\n//         borderColor: '#f1f3fa',\n//         padding: {\n//             left: 0,\n//             right: 0,\n//         },\n//     },\n//     plotOptions: {\n//         pie: {\n//             donut: {\n//                 size: '70%',\n//             },\n//             expandOnClick: false\n//         }\n//     },\n//     legend: {\n//         show: true,\n//         position: 'right',\n//         horizontalAlign: 'left',\n//         itemMargin: {\n//             horizontal: 6,\n//             vertical: 3\n//         }\n//     },\n//     labels: ['Clothes 44k', 'Smartphons 55k'],\n//     responsive: [{\n//         breakpoint: 480,\n//         options: {\n            \n//             legend: {\n//                 position: 'bottom'\n//             }\n//         }\n//     }],\n//     tooltip: {\n//         y: {\n//             formatter: function(value) { return value + \"k\" }\n//         },\n//     }\n// };\n\n// const tdata = [1.5658, 98.4342];\n\nclass Statistics extends React.Component{\n    constructor(props){\n        super(props);\n        this.state={\n            data: null,\n            chart1: null,\n            chart2: null\n        }\n    }\n    \n    componentDidMount(){\n       fetch(`${process.env.REACT_APP_SERVER}/getInfo`)\n       .then(response=> response.json())\n       .then(response=>{\n           console.log(response);\n           this.setState({data: response});\n           this.setState({\n                chart1: {\n                    option: {\n                        chart: {\n                            height: 120,\n                            type: 'donut',\n                            toolbar: {\n                                show: false,\n                            },\n                            parentHeightOffset: 0,\n                        },\n                        colors: [\"#5369f8\", \"#43d39e\"],\n                        grid: {\n                            borderColor: '#f1f3fa',\n                            padding: {\n                                left: 0,\n                                right: 0,\n                            },\n                        },\n                        plotOptions: {\n                            pie: {\n                                donut: {\n                                    size: '70%',\n                                },\n                                expandOnClick: false\n                            }\n                        },\n                        legend: {\n                            show: true,\n                            position: 'right',\n                            horizontalAlign: 'left',\n                            itemMargin: {\n                                horizontal: 6,\n                                vertical: 3\n                            }\n                        },\n                         labels: ['fatality rate', 'non-fatality'],\n                        responsive: [{\n                            breakpoint: 480,\n                            options: {\n                                \n                                legend: {\n                                    position: 'bottom'\n                                }\n                            }\n                        }],\n                        tooltip: {\n                            y: {\n                                formatter: function(value) { return value + \"k\" }\n                            },\n                        }\n                    },\n                    \n                data: [parseInt(response[0].FR), 100-response[0].FR]\n                    \n                }\n           });\n          // console.log(this.state.data);\n          this.setState({\n            chart2: {\n                option: {\n                    chart: {\n                        height: 120,\n                        type: 'donut',\n                        toolbar: {\n                            show: false,\n                        },\n                        parentHeightOffset: 0,\n                    },\n                    colors: [\"#5369f8\", \"#43d39e\"],\n                    grid: {\n                        borderColor: '#f1f3fa',\n                        padding: {\n                            left: 0,\n                            right: 0,\n                        },\n                    },\n                    plotOptions: {\n                        pie: {\n                            donut: {\n                                size: '70%',\n                            },\n                            expandOnClick: false\n                        }\n                    },\n                    legend: {\n                        show: true,\n                        position: 'right',\n                        horizontalAlign: 'left',\n                        itemMargin: {\n                            horizontal: 6,\n                            vertical: 3\n                        }\n                    },\n                     labels: ['recovery rate', 'non-recovery'],\n                    responsive: [{\n                        breakpoint: 480,\n                        options: {\n                            \n                            legend: {\n                                position: 'bottom'\n                            }\n                        }\n                    }],\n                    tooltip: {\n                        y: {\n                            formatter: function(value) { return value + \"k\" }\n                        },\n                    }\n                },\n                \n            data: [parseInt(response[0].PR), 100-response[0].PR]\n                \n            }\n       });\n       })\n    }\n    render(){\n        \n        if(this.state.data==null){\n            return<div></div>\n        }\n        if(this.state.chart1==null){\n            return<div></div>\n        }\n        if(this.state.chart2==null){\n            return<div></div>\n        }\n        const data = this.state.data[0];\n        ///console.log(this.state.chart1.option)\n        const options = this.state.chart1.option;\n        const tdata = this.state.chart1.data;\n        const options2 = this.state.chart1.option;\n        const tdata2 = this.state.chart1.data;\n        console.log(data);\n    return (\n        <React.Fragment>\n            <Row>\n                <Col md={6} xl={3}>\n                    <StatisticsWidget description=\"Confirmed\" title={data.totalConfirmed} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-primary\"></StatisticsWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Active\" title={data.activeCases} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-danger\"></StatisticsWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Recovered\" title={data.activeCases} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-success\"></StatisticsWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Deceased\" title={data.totalDeaths} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-warning\"></StatisticsWidget>\n                </Col>\n            </Row>\n            <Row>\n            <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Total Critical\" title={data.totalCritical} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-secondary\"></StatisticsWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Daily Cases Confirmed\" title={data.dailyConfirmed} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-info\"></StatisticsWidget>\n                </Col>\n\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Fatality Rate\" title={data.FR} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-info\"></StatisticsWidget>\n                </Col>\n                <Col md={6} xl={3}>\n                <StatisticsWidget description=\"Recovery Rate\" title={data.PR} icon={FeatherIcon.BarChart2} iconClass=\"icon-dual-info\"></StatisticsWidget>\n                </Col>\n            </Row>\n\n        </React.Fragment>\n    );\n                    }\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}