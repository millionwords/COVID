{"ast":null,"code":"import _classCallCheck from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Link}from'react-router-dom';import{Dropdown,DropdownMenu,DropdownToggle,UncontrolledTooltip}from'reactstrap';import{Bell}from'react-feather';import PerfectScrollbar from'react-perfect-scrollbar';import'react-perfect-scrollbar/dist/css/styles.css';var notificationContainerStyle={'maxHeight':'230px'};var NotificationDropdown=/*#__PURE__*/function(_Component){_inherits(NotificationDropdown,_Component);var _super=_createSuper(NotificationDropdown);function NotificationDropdown(props){var _this;_classCallCheck(this,NotificationDropdown);_this=_super.call(this,props);_this.getRedirectUrl=function(item){return\"/notification/\".concat(item.id);};_this.toggleDropdown=_this.toggleDropdown.bind(_assertThisInitialized(_this));_this.state={dropdownOpen:false};return _this;}/*:: toggleDropdown: () => void */_createClass(NotificationDropdown,[{key:\"toggleDropdown\",value:function toggleDropdown(){this.setState({dropdownOpen:!this.state.dropdownOpen});}},{key:\"render\",value:function render(){var tag=this.props.tag||\"div\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Dropdown,{isOpen:this.state.dropdownOpen,toggle:this.toggleDropdown,className:\"notification-list\",tag:tag,id:\"notiDropdown\"},/*#__PURE__*/React.createElement(DropdownToggle,{\"data-toggle\":\"dropdown\",tag:\"a\",className:\"nav-link dropdown-toggle\",onClick:this.toggleDropdown,\"aria-expanded\":this.state.dropdownOpen},/*#__PURE__*/React.createElement(Bell,null),/*#__PURE__*/React.createElement(\"span\",{className:\"noti-icon-badge\"}))));}}]);return NotificationDropdown;}(Component);NotificationDropdown.defaultProps={notifications:[]};export default NotificationDropdown;","map":{"version":3,"sources":["/root/home/covid/frontend/src/components/NotificationDropdown.js"],"names":["React","Component","Link","Dropdown","DropdownMenu","DropdownToggle","UncontrolledTooltip","Bell","PerfectScrollbar","notificationContainerStyle","NotificationDropdown","props","getRedirectUrl","item","id","toggleDropdown","bind","state","dropdownOpen","setState","tag","defaultProps","notifications"],"mappings":"gtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,QAAT,CAAmBC,YAAnB,CAAiCC,cAAjC,CAAiDC,mBAAjD,KAA4E,YAA5E,CACA,OAASC,IAAT,KAAqB,eAArB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,yBAA7B,CACA,MAAO,6CAAP,CAEA,GAAMC,CAAAA,0BAA0B,CAAG,CAC/B,YAAa,OADkB,CAAnC,C,GAKMC,CAAAA,oB,4HAMF,8BAAYC,KAAZ,CAAmB,sDACf,uBAAMA,KAAN,EADe,MAgBnBC,cAhBmB,CAgBF,SAACC,IAAD,CAAU,CACvB,8BAAwBA,IAAI,CAACC,EAA7B,EACH,CAlBkB,CAEf,MAAKC,cAAL,CAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB,CAEA,MAAKC,KAAL,CAAa,CACTC,YAAY,CAAE,KADL,CAAb,CAJe,aAOlB,CAED,kC,wFACiB,CACb,KAAKC,QAAL,CAAc,CACVD,YAAY,CAAE,CAAC,KAAKD,KAAL,CAAWC,YADhB,CAAd,EAGH,C,uCAMQ,CACL,GAAME,CAAAA,GAAG,CAAG,KAAKT,KAAL,CAAWS,GAAX,EAAkB,KAA9B,CAEA,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACA,oBAAC,QAAD,EAAU,MAAM,CAAE,KAAKH,KAAL,CAAWC,YAA7B,CAA2C,MAAM,CAAE,KAAKH,cAAxD,CAAwE,SAAS,CAAC,mBAAlF,CAAsG,GAAG,CAAEK,GAA3G,CAAgH,EAAE,CAAC,cAAnH,eACI,oBAAC,cAAD,EACI,cAAY,UADhB,CAEI,GAAG,CAAC,GAFR,CAGI,SAAS,CAAC,0BAHd,CAGyC,OAAO,CAAE,KAAKL,cAHvD,CAGuE,gBAAe,KAAKE,KAAL,CAAWC,YAHjG,eAII,oBAAC,IAAD,MAJJ,cAKI,4BAAM,SAAS,CAAC,iBAAhB,EALJ,CADJ,CADA,CADJ,CA0CH,C,kCAvE8BjB,S,EAA7BS,oB,CAEKW,Y,CAAe,CAClBC,aAAa,CAAE,EADG,C,CAwE1B,cAAeZ,CAAAA,oBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle, UncontrolledTooltip } from 'reactstrap';\nimport { Bell } from 'react-feather';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nconst notificationContainerStyle = {\n    'maxHeight': '230px'\n};\n\n\nclass NotificationDropdown extends Component {\n\n    static defaultProps = {\n        notifications: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    /*:: toggleDropdown: () => void */\n    toggleDropdown() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    getRedirectUrl = (item) => {\n        return `/notification/${item.id}`;\n    }\n\n    render() {\n        const tag = this.props.tag || \"div\";\n\n        return (\n            <React.Fragment>\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown} className=\"notification-list\" tag={tag} id=\"notiDropdown\">\n                <DropdownToggle\n                    data-toggle=\"dropdown\"\n                    tag=\"a\"\n                    className=\"nav-link dropdown-toggle\" onClick={this.toggleDropdown} aria-expanded={this.state.dropdownOpen}>\n                    <Bell />\n                    <span className=\"noti-icon-badge\"></span>\n                </DropdownToggle>\n                {/* <DropdownMenu right className=\"dropdown-lg\">\n                    <div onClick={this.toggleDropdown}>\n                        <div className=\"dropdown-item noti-title border-bottom\">\n                            <h5 className=\"m-0 font-size-16\">\n                                <span className=\"float-right\">\n                                    <Link to=\"/notifications\" className=\"text-dark\">\n                                        <small>Clear All</small>\n                                    </Link>\n                                </span>Notification\n                                </h5>\n                        </div>\n                        <PerfectScrollbar style={notificationContainerStyle}>\n                            {this.props.notifications.map((item, i) => {\n                                return <Link to={this.getRedirectUrl(item)} className=\"dropdown-item notify-item\" key={i + \"-noti\"}>\n                                    <div className={`notify-icon bg-${item.bgColor}`}>\n                                        <i className={item.icon}></i>\n                                    </div>\n                                    <p className=\"notify-details\">{item.text}\n                                        <small className=\"text-muted\">{item.subText}</small>\n                                    </p>\n                                </Link>\n                            })}\n                        </PerfectScrollbar>\n\n                        <Link to=\"/\" className=\"dropdown-item text-center text-primary notify-item notify-all border-top\">View All</Link>\n                    </div>\n                </DropdownMenu> */}\n            </Dropdown>\n\n            {/* <UncontrolledTooltip placement=\"left\" target=\"notiDropdown\">{this.props.notifications.length} new unread notificationse</UncontrolledTooltip> */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NotificationDropdown;"]},"metadata":{},"sourceType":"module"}