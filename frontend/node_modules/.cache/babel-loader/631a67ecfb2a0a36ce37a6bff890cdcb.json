{"ast":null,"code":"import React from'react';import{Row,Col,Card,CardBody,Table}from'reactstrap';import PageTitle from'../../components/PageTitle';var records=[{id:1,firstName:'Greeva',lastName:'N',username:'@greeva'},{id:2,firstName:'Dhyani',lastName:'B',username:'@dhyani'},{id:3,firstName:'Manu',lastName:'B',username:'@mannat'},{id:4,firstName:'Nik',lastName:'N',username:'@nikn'},{id:5,firstName:'Shreyu',lastName:'Navadiya',username:'@sn'}];var BasicTable=function BasicTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Basic example\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Just use \",/*#__PURE__*/React.createElement(\"code\",null,\"Table\"),\" element\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var InverseTable=function InverseTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Inverse Table\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"You can also invert the colors\\u2014with light text on dark backgrounds\\u2014by specifying \",/*#__PURE__*/React.createElement(\"code\",null,\"dark\"),' ',\"attribute\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",dark:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var StripedRowsTable=function StripedRowsTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Striped Rows\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Add \",/*#__PURE__*/React.createElement(\"code\",null,\"striped\"),\" attribute to table\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",striped:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var BorderedTable=function BorderedTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Bordered table\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Add \",/*#__PURE__*/React.createElement(\"code\",null,\"bordered\"),\" attribute for borders on all sides of the table and cells.\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",bordered:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var HoverableTable=function HoverableTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Hoverable Rows\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Add \",/*#__PURE__*/React.createElement(\"code\",null,\"hover\"),\" attribute to enable a hover state on table rows\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",hover:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var SmallTable=function SmallTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Small table\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Add \",/*#__PURE__*/React.createElement(\"code\",null,\"size=\\\"sm\\\"\"),\" attribute to make tables more compact by cutting cell padding in half\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",size:\"sm\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var ResponsiveTable=function ResponsiveTable(){return/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"header-title mt-0 mb-1\"},\"Responsive Table\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Across every breakpoint, use \",/*#__PURE__*/React.createElement(\"code\",null,\"responsive\"),\" attribute to create responsive tables\"),/*#__PURE__*/React.createElement(Table,{className:\"mb-0\",responsive:true},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"#\"),/*#__PURE__*/React.createElement(\"th\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Username\"))),/*#__PURE__*/React.createElement(\"tbody\",null,records.map(function(record,index){return/*#__PURE__*/React.createElement(\"tr\",{key:index},/*#__PURE__*/React.createElement(\"th\",{scope:\"row\"},record.id),/*#__PURE__*/React.createElement(\"td\",null,record.firstName),/*#__PURE__*/React.createElement(\"td\",null,record.lastName),/*#__PURE__*/React.createElement(\"td\",null,record.username));})))));};var Tables=function Tables(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"page-title\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(PageTitle,{breadCrumbItems:[{label:'Tables',path:'/tables/basic'},{label:'Basic Tables',path:'/tables/basic',active:true}],title:'Basic Tables'}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(BasicTable,null)),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(InverseTable,null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(StripedRowsTable,null)),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(BorderedTable,null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(HoverableTable,null)),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(SmallTable,null))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ResponsiveTable,null))));};export default Tables;","map":{"version":3,"sources":["/root/home/covid/frontend/src/pages/tables/Basic.js"],"names":["React","Row","Col","Card","CardBody","Table","PageTitle","records","id","firstName","lastName","username","BasicTable","map","record","index","InverseTable","StripedRowsTable","BorderedTable","HoverableTable","SmallTable","ResponsiveTable","Tables","label","path","active"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, CardBody, Table } from 'reactstrap';\n\nimport PageTitle from '../../components/PageTitle';\n\nconst records = [\n    { id: 1, firstName: 'Greeva', lastName: 'N', username: '@greeva' },\n    { id: 2, firstName: 'Dhyani', lastName: 'B', username: '@dhyani' },\n    { id: 3, firstName: 'Manu', lastName: 'B', username: '@mannat' },\n    { id: 4, firstName: 'Nik', lastName: 'N', username: '@nikn' },\n    { id: 5, firstName: 'Shreyu', lastName: 'Navadiya', username: '@sn' },\n];\n\n\nconst BasicTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Basic example</h4>\n                <p className=\"sub-header\">\n                    Just use <code>Table</code> element\n                </p>\n\n                <Table className=\"mb-0\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\n\nconst InverseTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Inverse Table</h4>\n                <p className=\"sub-header\">\n                    You can also invert the colors—with light text on dark backgrounds—by specifying <code>dark</code>{' '}\n                    attribute\n                </p>\n\n                <Table className=\"mb-0\" dark>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst StripedRowsTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Striped Rows</h4>\n                <p className=\"sub-header\">\n                    Add <code>striped</code> attribute to table\n                </p>\n\n                <Table className=\"mb-0\" striped>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst BorderedTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Bordered table</h4>\n                <p className=\"sub-header\">\n                    Add <code>bordered</code> attribute for borders on all sides of the table and cells.\n                </p>\n\n                <Table className=\"mb-0\" bordered>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst HoverableTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Hoverable Rows</h4>\n                <p className=\"sub-header\">\n                    Add <code>hover</code> attribute to enable a hover state on table rows\n                </p>\n\n                <Table className=\"mb-0\" hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst SmallTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Small table</h4>\n                <p className=\"sub-header\">\n                    Add <code>size=\"sm\"</code> attribute to make tables more compact by cutting cell padding in half\n                </p>\n\n                <Table className=\"mb-0\" size=\"sm\">\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst ResponsiveTable = () => {\n    return (\n        <Card>\n            <CardBody>\n                <h4 className=\"header-title mt-0 mb-1\">Responsive Table</h4>\n                <p className=\"sub-header\">\n                    Across every breakpoint, use <code>responsive</code> attribute to create responsive tables\n                </p>\n\n                <Table className=\"mb-0\" responsive>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Username</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {records.map((record, index) => {\n                            return (\n                                <tr key={index}>\n                                    <th scope=\"row\">{record.id}</th>\n                                    <td>{record.firstName}</td>\n                                    <td>{record.lastName}</td>\n                                    <td>{record.username}</td>\n                                </tr>\n                            );\n                        })}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n    );\n};\n\nconst Tables = () => {\n    return (\n        <React.Fragment>\n            <Row className=\"page-title\">\n                <Col md={12}>\n                    <PageTitle\n                        breadCrumbItems={[\n                            { label: 'Tables', path: '/tables/basic' },\n                            { label: 'Basic Tables', path: '/tables/basic', active: true },\n                        ]}\n                        title={'Basic Tables'}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BasicTable />\n                </Col>\n\n                <Col xl={6}>\n                    <InverseTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StripedRowsTable />\n                </Col>\n\n                <Col xl={6}>\n                    <BorderedTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <HoverableTable />\n                </Col>\n\n                <Col xl={6}>\n                    <SmallTable />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <ResponsiveTable />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default Tables;\n"]},"metadata":{},"sourceType":"module"}