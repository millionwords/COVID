{"ast":null,"code":"import _toConsumableArray from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\n\nvar _this = this,\n    _jsxFileName = \"/root/home/covid/frontend/src/components/FileUploader.js\";\n\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport { Row, Col, Card, UncontrolledAlert } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\n\nvar Layout = function Layout(_ref) {\n  var input = _ref.input,\n      previews = _ref.previews,\n      submitButton = _ref.submitButton,\n      dropzoneProps = _ref.dropzoneProps,\n      files = _ref.files,\n      maxFiles = _ref.extra.maxFiles;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, previews, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, dropzoneProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), files.length < maxFiles && input), files.length > 0 && submitButton);\n};\n\nvar FileUploader = /*#__PURE__*/function (_Component) {\n  _inherits(FileUploader, _Component);\n\n  var _super = _createSuper(FileUploader);\n\n  function FileUploader(props) {\n    var _this2;\n\n    _classCallCheck(this, FileUploader);\n\n    _this2 = _super.call(this, props);\n\n    _this2.handleAcceptedFiles = function (files) {\n      var allFiles = files;\n      console.log(allFiles);\n\n      if (files.length > 1) {\n        _this2.setState({\n          status: true\n        });\n\n        _this2.setState({\n          error: \"Please select only one file\"\n        });\n\n        return;\n      }\n\n      console.log();\n      var filename = files[0].path;\n      console.log(filename);\n      var arr = filename.split(\".\");\n      console.log(arr[arr.length - 1]);\n\n      if (arr[arr.length - 1] !== \"jpg\" && arr[arr.length - 1] !== \"jpeg\" && arr[arr.length - 1] !== \"JPG\" && arr[arr.length - 1] !== \"JPEG\" && arr[arr.length - 1] !== \"png\" && arr[arr.length - 1] !== \"PNG\") {\n        _this2.setState({\n          status: true\n        });\n\n        _this2.setState({\n          error: \"Please select an image file (jpg/jpeg/png)\"\n        });\n\n        return;\n      }\n\n      if (_this2.props.showPreview) {\n        var _allFiles;\n\n        files.map(function (file) {\n          return Object.assign(file, {\n            preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n            formattedSize: _this2.formatBytes(file.size)\n          });\n        });\n        allFiles = _this2.state.selectedFiles;\n\n        (_allFiles = allFiles).push.apply(_allFiles, _toConsumableArray(files));\n\n        _this2.setState({\n          selectedFiles: allFiles\n        });\n      }\n\n      if (_this2.props.onFileUpload) _this2.props.onFileUpload(allFiles);\n    };\n\n    _this2.onDismiss = function () {\n      _this2.setState({\n        status: false\n      });\n\n      _this2.setState({\n        error: null\n      });\n    };\n\n    _this2.formatBytes = function (bytes, decimals) {\n      if (bytes === 0) return '0 Bytes';\n      var k = 1024;\n      var dm = decimals < 0 ? 0 : decimals;\n      var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    _this2.handleAcceptedFiles = _this2.handleAcceptedFiles.bind(_assertThisInitialized(_this2));\n    _this2.state = {\n      selectedFiles: [],\n      status: false,\n      error: null\n    };\n    return _this2;\n  }\n  /**\n   * Handled the accepted files and shows the preview\n   */\n\n\n  _createClass(FileUploader, [{\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropzone, Object.assign({\n        onDrop: function onDrop(acceptedFiles) {\n          return _this3.handleAcceptedFiles(acceptedFiles);\n        },\n        maxFiles: 1,\n        LayoutComponent: Layout,\n        accept: \"image/*\" //classNames={{ inputLabelWithFiles: defaultClassNames.inputLabel }}\n        ,\n        inputContent: \"Drop Files (Custom Layout)\" //inputContent={(files, extra) => (extra.reject ? 'Image files only' : 'Drag Files')}\n\n      }, this.props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }), function (_ref2) {\n        var getRootProps = _ref2.getRootProps,\n            getInputProps = _ref2.getInputProps;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"dropzone text-center\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", Object.assign({\n          className: \"dz-message py-5 needsclick\"\n        }, getRootProps(), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, getInputProps(), {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"i\", {\n          className: \"h1 text-muted uil-cloud-upload\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"h3\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }\n        }, \"Drop files here or click to upload.\")));\n      }), this.state.status && /*#__PURE__*/React.createElement(UncontrolledAlert, {\n        color: \"danger\",\n        toggle: this.onDismiss,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }\n      }, this.state.error)), this.props.showPreview && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"dropzone-previews mt-3\",\n        id: \"file-previews\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }\n      }, this.state.selectedFiles.map(function (f, i) {\n        return /*#__PURE__*/React.createElement(Card, {\n          className: \"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\",\n          key: i + '-file',\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-2\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          className: \"align-items-center\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 41\n          }\n        }, f.preview && /*#__PURE__*/React.createElement(Col, {\n          className: \"col-auto\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          \"data-dz-thumbnail\": \"\",\n          className: \"avatar-sm rounded bg-light\",\n          alt: f.name,\n          src: f.preview,\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 53\n          }\n        })), !f.preview && /*#__PURE__*/React.createElement(Col, {\n          className: \"col-auto\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"avatar-sm\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"avatar-title bg-primary rounded\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 57\n          }\n        }, f.type.split('/')[0]))), /*#__PURE__*/React.createElement(Col, {\n          className: \"pl-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 45\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          to: \"#\",\n          className: \"text-muted font-weight-bold\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 49\n          }\n        }, f.name), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"mb-0\",\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(\"strong\", {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 53\n          }\n        }, f.formattedSize))))));\n      })));\n    }\n  }]);\n\n  return FileUploader;\n}(Component);\n\nFileUploader.defaultProps = {\n  showPreview: true\n};\nexport default FileUploader;","map":{"version":3,"sources":["/root/home/covid/frontend/src/components/FileUploader.js"],"names":["React","Component","Link","ReactDOMServer","Row","Col","Card","UncontrolledAlert","Dropzone","Layout","input","previews","submitButton","dropzoneProps","files","maxFiles","extra","length","FileUploader","props","handleAcceptedFiles","allFiles","console","log","setState","status","error","filename","path","arr","split","showPreview","map","file","Object","assign","preview","URL","createObjectURL","formattedSize","formatBytes","size","state","selectedFiles","push","onFileUpload","onDismiss","bytes","decimals","k","dm","sizes","i","Math","floor","parseFloat","pow","toFixed","bind","acceptedFiles","getRootProps","getInputProps","f","name","type","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport ReactDOMServer from 'react-dom/server';\nimport { Row, Col, Card, UncontrolledAlert } from 'reactstrap';\nimport Dropzone from 'react-dropzone';\n\nconst Layout = ({ input, previews, submitButton, dropzoneProps, files, extra: { maxFiles } }) => {\n    return (\n      <div>\n        {previews}\n  \n        <div {...dropzoneProps}>\n          {files.length < maxFiles && input}\n        </div>\n  \n        {files.length > 0 && submitButton}\n      </div>\n    )\n  }\nclass FileUploader extends Component {\n    static defaultProps = {\n        showPreview: true,\n    };\n\n    constructor(props) {\n        super(props);\n        this.handleAcceptedFiles = this.handleAcceptedFiles.bind(this);\n\n        this.state = {\n            selectedFiles: [],\n            status: false,\n            error: null\n        };\n    }\n\n    /**\n     * Handled the accepted files and shows the preview\n     */\n    handleAcceptedFiles = (files) => {\n        var allFiles = files;\n        console.log(allFiles);\n\n        if(files.length>1){\n           this.setState({status: true});\n           this.setState({error: \"Please select only one file\"});\n                        return;\n        }\n        console.log()\n        let filename = files[0].path;\n        console.log(filename);\n        let arr = filename.split(\".\");\n        console.log(arr[arr.length-1]);\n        if(arr[arr.length-1]!==\"jpg\"&&arr[arr.length-1]!==\"jpeg\"&&arr[arr.length-1]!==\"JPG\"&&arr[arr.length-1]!==\"JPEG\"&&arr[arr.length-1]!==\"png\"&&arr[arr.length-1]!==\"PNG\"){\n            this.setState({status: true});\n            this.setState({error: \"Please select an image file (jpg/jpeg/png)\"});\n                         return;\n        }\n        if (this.props.showPreview) {\n            files.map(file =>\n                Object.assign(file, {\n                    preview: file['type'].split('/')[0] === 'image' ? URL.createObjectURL(file) : null,\n                    formattedSize: this.formatBytes(file.size),\n                })\n            );\n\n            allFiles = this.state.selectedFiles;\n            allFiles.push(...files);\n            this.setState({ selectedFiles: allFiles });\n        }\n\n        if (this.props.onFileUpload) this.props.onFileUpload(allFiles);\n    };\n\n    onDismiss = () => {\n        this.setState({status: false});\n        this.setState({error: null});\n    }\n    /**\n     * Formats the size\n     */\n    formatBytes = (bytes, decimals) => {\n        if (bytes === 0) return '0 Bytes';\n        const k = 1024;\n        const dm = decimals < 0 ? 0 : decimals;\n        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n\n        const i = Math.floor(Math.log(bytes) / Math.log(k));\n        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                <Dropzone \n                onDrop={acceptedFiles => this.handleAcceptedFiles(acceptedFiles)}\n                maxFiles={1}\n                LayoutComponent={Layout}\n                accept=\"image/*\"\n                //classNames={{ inputLabelWithFiles: defaultClassNames.inputLabel }}\n                inputContent=\"Drop Files (Custom Layout)\"\n                //inputContent={(files, extra) => (extra.reject ? 'Image files only' : 'Drag Files')}\n                {...this.props}>\n                    {({ getRootProps, getInputProps }) => (\n                        <div className=\"dropzone text-center\">\n                            <div className=\"dz-message py-5 needsclick\" {...getRootProps()}>\n                                <input {...getInputProps()} />\n                                <i className=\"h1 text-muted uil-cloud-upload\"></i>\n                                <h3>Drop files here or click to upload.</h3>\n                                {/* <span className=\"text-muted font-13\">\n                                    (This is just a demo dropzone. Selected files are <strong>not</strong> actually\n                                    uploaded.)\n                                </span> */}\n                            </div>\n                        </div>\n                    )}\n                </Dropzone>\n                {this.state.status && (\n                    <UncontrolledAlert color={\"danger\"} toggle={this.onDismiss}>\n                    <strong>{this.state.error}</strong>\n                     </UncontrolledAlert>\n                )}\n                {this.props.showPreview && (\n                    <div className=\"dropzone-previews mt-3\" id=\"file-previews\">\n                        {this.state.selectedFiles.map((f, i) => {\n                            return (\n                                <Card\n                                    className=\"mt-1 mb-0 shadow-none border dz-processing dz-image-preview dz-success dz-complete\"\n                                    key={i + '-file'}>\n                                    <div className=\"p-2\">\n                                        <Row className=\"align-items-center\">\n                                            {f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <img\n                                                        data-dz-thumbnail=\"\"\n                                                        className=\"avatar-sm rounded bg-light\"\n                                                        alt={f.name}\n                                                        src={f.preview}\n                                                    />\n                                                </Col>\n                                            )}\n                                            {!f.preview && (\n                                                <Col className=\"col-auto\">\n                                                    <div className=\"avatar-sm\">\n                                                        <span className=\"avatar-title bg-primary rounded\">\n                                                            {f.type.split('/')[0]}\n                                                        </span>\n                                                    </div>\n                                                </Col>\n                                            )}\n                                            <Col className=\"pl-0\">\n                                                <Link to=\"#\" className=\"text-muted font-weight-bold\">\n                                                    {f.name}\n                                                </Link>\n                                                <p className=\"mb-0\">\n                                                    <strong>{f.formattedSize}</strong>\n                                                </p>\n                                            </Col>\n                                        </Row>\n                                    </div>\n                                </Card>\n                            );\n                        })}\n                    </div>\n                )}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default FileUploader;\n"]},"metadata":{},"sourceType":"module"}