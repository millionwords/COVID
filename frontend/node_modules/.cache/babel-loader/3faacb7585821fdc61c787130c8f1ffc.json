{"ast":null,"code":"import React from'react';import{Row,Col,Card,CardBody,UncontrolledTooltip,CustomInput}from'reactstrap';import classNames from'classnames';import{allTasks}from'./Data';var TaskSummary=function TaskSummary(task){var clickHandler=task.onClickHandler||{};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:classNames('justify-content-sm-between','border-bottom','mt-2','pt-2','cursor-pointer'),onClick:function onClick(){return clickHandler(task);}},/*#__PURE__*/React.createElement(Col,{lg:6,className:\"mb-lg-0\"},/*#__PURE__*/React.createElement(CustomInput,{type:\"checkbox\",id:\"task-\".concat(task.id),label:task.title,defaultChecked:task.completed})),/*#__PURE__*/React.createElement(Col,{lg:6},/*#__PURE__*/React.createElement(\"div\",{className:\"d-sm-flex justify-content-between\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"img\",{src:task.assignee_avatar,alt:\"\",className:\"avatar-xs rounded-circle\",id:\"task-avt-\".concat(task.id)}),/*#__PURE__*/React.createElement(UncontrolledTooltip,{placement:\"bottom\",target:\"task-avt-\".concat(task.id)},\"Assigned to \",task.assigned_to)),/*#__PURE__*/React.createElement(\"div\",{className:\"mt-3 mt-sm-0\"},/*#__PURE__*/React.createElement(\"ul\",{className:\"list-inline font-13 text-sm-right\"},/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item pr-1\"},/*#__PURE__*/React.createElement(\"i\",{className:\"uil uil-schedule font-16 mr-1\"}),task.due_date),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item pr-1\"},/*#__PURE__*/React.createElement(\"i\",{className:\"uil uil-align-alt font-16 mr-1\"}),task.checklists.filter(function(x){return x.completed;}).length,\"/\",task.checklists.length),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item pr-2\"},/*#__PURE__*/React.createElement(\"i\",{className:\"uil uil-comment-message font-16 mr-1\"}),task.comments.length),/*#__PURE__*/React.createElement(\"li\",{className:\"list-inline-item\"},/*#__PURE__*/React.createElement(\"span\",{className:classNames('badge',{'badge-soft-danger':task.priority==='High','badge-soft-info':task.priority==='Medium','badge-soft-success':task.priority==='Low'},'p-1')},task.priority))))))));};var Tasks=function Tasks(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h5\",{className:\"mt-3\"},\"Tasks\"),/*#__PURE__*/React.createElement(Card,{className:\"mb-0 shadow-none\"},/*#__PURE__*/React.createElement(CardBody,null,allTasks.map(function(task,index){return/*#__PURE__*/React.createElement(TaskSummary,Object.assign({},task,{key:index,onClickHandler:function onClickHandler(){}}));}))));};export default Tasks;","map":{"version":3,"sources":["/root/home/covid/frontend/src/pages/other/Profile/Tasks.js"],"names":["React","Row","Col","Card","CardBody","UncontrolledTooltip","CustomInput","classNames","allTasks","TaskSummary","task","clickHandler","onClickHandler","id","title","completed","assignee_avatar","assigned_to","due_date","checklists","filter","x","length","comments","priority","Tasks","map","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    Row, Col, Card, CardBody, UncontrolledTooltip, CustomInput\n} from 'reactstrap';\nimport classNames from 'classnames';\n\n\nimport { allTasks } from './Data';\n\n\nconst TaskSummary = (task) => {\n    const clickHandler = task.onClickHandler || {};\n\n    return <React.Fragment>\n        <Row className={classNames('justify-content-sm-between', 'border-bottom', 'mt-2', 'pt-2', 'cursor-pointer')} onClick={() => clickHandler(task)}>\n            <Col lg={6} className=\"mb-lg-0\">\n                <CustomInput type=\"checkbox\" id={`task-${task.id}`} label={task.title} defaultChecked={task.completed}></CustomInput>\n            </Col>\n            <Col lg={6}>\n                <div className=\"d-sm-flex justify-content-between\">\n                    <div>\n                        <img src={task.assignee_avatar} alt=\"\" className=\"avatar-xs rounded-circle\" id={`task-avt-${task.id}`} />\n                        <UncontrolledTooltip placement=\"bottom\" target={`task-avt-${task.id}`}>Assigned to {task.assigned_to}</UncontrolledTooltip>\n                    </div>\n\n                    <div className=\"mt-3 mt-sm-0\">\n                        <ul className=\"list-inline font-13 text-sm-right\">\n                            <li className=\"list-inline-item pr-1\"><i className='uil uil-schedule font-16 mr-1'></i>{task.due_date}</li>\n                            <li className=\"list-inline-item pr-1\"><i className='uil uil-align-alt font-16 mr-1'></i>{task.checklists.filter(x => x.completed).length}/{task.checklists.length}</li>\n                            <li className=\"list-inline-item pr-2\"><i className='uil uil-comment-message font-16 mr-1'></i>{task.comments.length}</li>\n                            <li className=\"list-inline-item\">\n                                <span className={classNames('badge', { 'badge-soft-danger': task.priority === 'High', 'badge-soft-info': task.priority === 'Medium', 'badge-soft-success': task.priority === 'Low' }, 'p-1')}>{task.priority}</span>\n                            </li>\n                        </ul>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    </React.Fragment>\n}\n\nconst Tasks = () => {\n\n    return <React.Fragment>\n        <h5 className=\"mt-3\">Tasks</h5>\n        <Card className=\"mb-0 shadow-none\">\n            <CardBody>\n                {allTasks.map((task, index) => {\n                    return <TaskSummary {...task} key={index} onClickHandler={() => { }} />\n                })}\n            </CardBody>\n        </Card>\n    </React.Fragment>\n}\n\n\nexport default Tasks;"]},"metadata":{},"sourceType":"module"}