{"ast":null,"code":"import _classCallCheck from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/root/home/covid/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/root/home/covid/frontend/src/components/NotificationDropdown.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle, UncontrolledTooltip } from 'reactstrap';\nimport { Bell } from 'react-feather';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nvar notificationContainerStyle = {\n  'maxHeight': '230px'\n};\n\nvar NotificationDropdown = /*#__PURE__*/function (_Component) {\n  _inherits(NotificationDropdown, _Component);\n\n  var _super = _createSuper(NotificationDropdown);\n\n  function NotificationDropdown(props) {\n    var _this;\n\n    _classCallCheck(this, NotificationDropdown);\n\n    _this = _super.call(this, props);\n\n    _this.getRedirectUrl = function (item) {\n      return \"/notification/\".concat(item.id);\n    };\n\n    _this.toggleDropdown = _this.toggleDropdown.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dropdownOpen: false\n    };\n    return _this;\n  }\n  /*:: toggleDropdown: () => void */\n\n\n  _createClass(NotificationDropdown, [{\n    key: \"toggleDropdown\",\n    value: function toggleDropdown() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var tag = this.props.tag || \"div\";\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Dropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggleDropdown,\n        className: \"notification-list\",\n        tag: tag,\n        id: \"notiDropdown\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(DropdownToggle, {\n        \"data-toggle\": \"dropdown\",\n        tag: \"a\",\n        className: \"nav-link dropdown-toggle\",\n        onClick: this.toggleDropdown,\n        \"aria-expanded\": this.state.dropdownOpen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Bell, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"noti-icon-badge\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return NotificationDropdown;\n}(Component);\n\nNotificationDropdown.defaultProps = {\n  notifications: []\n};\nexport default NotificationDropdown;","map":{"version":3,"sources":["/root/home/covid/frontend/src/components/NotificationDropdown.js"],"names":["React","Component","Link","Dropdown","DropdownMenu","DropdownToggle","UncontrolledTooltip","Bell","PerfectScrollbar","notificationContainerStyle","NotificationDropdown","props","getRedirectUrl","item","id","toggleDropdown","bind","state","dropdownOpen","setState","tag","defaultProps","notifications"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,cAAjC,EAAiDC,mBAAjD,QAA4E,YAA5E;AACA,SAASC,IAAT,QAAqB,eAArB;AAEA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAO,6CAAP;AAEA,IAAMC,0BAA0B,GAAG;AAC/B,eAAa;AADkB,CAAnC;;IAKMC,oB;;;;;AAMF,gCAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAgBnBC,cAhBmB,GAgBF,UAACC,IAAD,EAAU;AACvB,qCAAwBA,IAAI,CAACC,EAA7B;AACH,KAlBkB;;AAEf,UAAKC,cAAL,GAAsB,MAAKA,cAAL,CAAoBC,IAApB,+BAAtB;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAJe;AAOlB;AAED;;;;;qCACiB;AACb,WAAKC,QAAL,CAAc;AACVD,QAAAA,YAAY,EAAE,CAAC,KAAKD,KAAL,CAAWC;AADhB,OAAd;AAGH;;;6BAMQ;AACL,UAAME,GAAG,GAAG,KAAKT,KAAL,CAAWS,GAAX,IAAkB,KAA9B;AAEA,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWC,YAA7B;AAA2C,QAAA,MAAM,EAAE,KAAKH,cAAxD;AAAwE,QAAA,SAAS,EAAC,mBAAlF;AAAsG,QAAA,GAAG,EAAEK,GAA3G;AAAgH,QAAA,EAAE,EAAC,cAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,cAAD;AACI,uBAAY,UADhB;AAEI,QAAA,GAAG,EAAC,GAFR;AAGI,QAAA,SAAS,EAAC,0BAHd;AAGyC,QAAA,OAAO,EAAE,KAAKL,cAHvD;AAGuE,yBAAe,KAAKE,KAAL,CAAWC,YAHjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAII,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,eAKI;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ,CADA,CADJ;AA0CH;;;;EAvE8BjB,S;;AAA7BS,oB,CAEKW,Y,GAAe;AAClBC,EAAAA,aAAa,EAAE;AADG,C;AAwE1B,eAAeZ,oBAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Dropdown, DropdownMenu, DropdownToggle, UncontrolledTooltip } from 'reactstrap';\nimport { Bell } from 'react-feather';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\n\nconst notificationContainerStyle = {\n    'maxHeight': '230px'\n};\n\n\nclass NotificationDropdown extends Component {\n\n    static defaultProps = {\n        notifications: []\n    }\n\n    constructor(props) {\n        super(props);\n        this.toggleDropdown = this.toggleDropdown.bind(this);\n\n        this.state = {\n            dropdownOpen: false\n        };\n    }\n\n    /*:: toggleDropdown: () => void */\n    toggleDropdown() {\n        this.setState({\n            dropdownOpen: !this.state.dropdownOpen\n        });\n    }\n\n    getRedirectUrl = (item) => {\n        return `/notification/${item.id}`;\n    }\n\n    render() {\n        const tag = this.props.tag || \"div\";\n\n        return (\n            <React.Fragment>\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggleDropdown} className=\"notification-list\" tag={tag} id=\"notiDropdown\">\n                <DropdownToggle\n                    data-toggle=\"dropdown\"\n                    tag=\"a\"\n                    className=\"nav-link dropdown-toggle\" onClick={this.toggleDropdown} aria-expanded={this.state.dropdownOpen}>\n                    <Bell />\n                    <span className=\"noti-icon-badge\"></span>\n                </DropdownToggle>\n                {/* <DropdownMenu right className=\"dropdown-lg\">\n                    <div onClick={this.toggleDropdown}>\n                        <div className=\"dropdown-item noti-title border-bottom\">\n                            <h5 className=\"m-0 font-size-16\">\n                                <span className=\"float-right\">\n                                    <Link to=\"/notifications\" className=\"text-dark\">\n                                        <small>Clear All</small>\n                                    </Link>\n                                </span>Notification\n                                </h5>\n                        </div>\n                        <PerfectScrollbar style={notificationContainerStyle}>\n                            {this.props.notifications.map((item, i) => {\n                                return <Link to={this.getRedirectUrl(item)} className=\"dropdown-item notify-item\" key={i + \"-noti\"}>\n                                    <div className={`notify-icon bg-${item.bgColor}`}>\n                                        <i className={item.icon}></i>\n                                    </div>\n                                    <p className=\"notify-details\">{item.text}\n                                        <small className=\"text-muted\">{item.subText}</small>\n                                    </p>\n                                </Link>\n                            })}\n                        </PerfectScrollbar>\n\n                        <Link to=\"/\" className=\"dropdown-item text-center text-primary notify-item notify-all border-top\">View All</Link>\n                    </div>\n                </DropdownMenu> */}\n            </Dropdown>\n\n            {/* <UncontrolledTooltip placement=\"left\" target=\"notiDropdown\">{this.props.notifications.length} new unread notificationse</UncontrolledTooltip> */}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default NotificationDropdown;"]},"metadata":{},"sourceType":"module"}