{"ast":null,"code":"import React from'react';import{Row,Col,Card,CardBody,Spinner}from'reactstrap';var colors=['primary','secondary','success','danger','warning','info'];var BorderedSpinners=function BorderedSpinners(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h5\",{className:\"font-size-15 mb-1\"},\"Border spinner\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"Use the border spinners for a lightweight loading indicator.\"),/*#__PURE__*/React.createElement(\"div\",null,colors.map(function(color,index){return/*#__PURE__*/React.createElement(Spinner,{key:index,className:\"m-2\",color:color});})));};var GrowingSpinners=function GrowingSpinners(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h5\",{className:\"font-size-15 mb-1\"},\"Growing spinner\"),/*#__PURE__*/React.createElement(\"p\",{className:\"sub-header\"},\"If you don\\u2019t fancy a border spinner, switch to the grow spinner. While it doesn\\u2019t technically spin, it does repeatedly grow!\"),/*#__PURE__*/React.createElement(\"div\",null,colors.map(function(color,index){return/*#__PURE__*/React.createElement(Spinner,{key:index,className:\"m-2\",type:\"grow\",color:color});})));};var Spinners=function Spinners(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"h4\",{className:\"mb-3 mt-0 header-title\"},\"Spinners\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(BorderedSpinners,null)),/*#__PURE__*/React.createElement(Col,{xl:6},/*#__PURE__*/React.createElement(GrowingSpinners,null))))));};export default Spinners;","map":{"version":3,"sources":["/root/home/covid/frontend/src/pages/uikit/BSComponents/Spinners.js"],"names":["React","Row","Col","Card","CardBody","Spinner","colors","BorderedSpinners","map","color","index","GrowingSpinners","Spinners"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,QAAzB,CAAmCC,OAAnC,KAAkD,YAAlD,CAEA,GAAMC,CAAAA,MAAM,CAAG,CAAC,SAAD,CAAY,WAAZ,CAAyB,SAAzB,CAAoC,QAApC,CAA8C,SAA9C,CAAyD,MAAzD,CAAf,CAGA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC3B,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,0BAAI,SAAS,CAAC,mBAAd,mBADJ,cAEI,yBAAG,SAAS,CAAC,YAAb,iEAFJ,cAII,+BAEKD,MAAM,CAACE,GAAP,CAAW,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAC1B,mBAAO,oBAAC,OAAD,EAAS,GAAG,CAAEA,KAAd,CAAqB,SAAS,CAAC,KAA/B,CAAqC,KAAK,CAAED,KAA5C,EAAP,CACH,CAFA,CAFL,CAJJ,CADJ,CAaH,CAdD,CAgBA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,0BAAI,SAAS,CAAC,mBAAd,oBADJ,cAEI,yBAAG,SAAS,CAAC,YAAb,2IAFJ,cAII,+BAEKL,MAAM,CAACE,GAAP,CAAW,SAACC,KAAD,CAAQC,KAAR,CAAkB,CAC1B,mBAAO,oBAAC,OAAD,EAAS,GAAG,CAAEA,KAAd,CAAqB,SAAS,CAAC,KAA/B,CAAqC,IAAI,CAAC,MAA1C,CAAiD,KAAK,CAAED,KAAxD,EAAP,CACH,CAFA,CAFL,CAJJ,CADJ,CAaH,CAdD,CAgBA,GAAMG,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CAEnB,mBACI,oBAAC,KAAD,CAAO,QAAP,mBACI,oBAAC,IAAD,mBACI,oBAAC,QAAD,mBACI,0BAAI,SAAS,CAAC,wBAAd,aADJ,cAGI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,gBAAD,MADJ,CADJ,cAKI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,eACI,oBAAC,eAAD,MADJ,CALJ,CAHJ,CADJ,CADJ,CADJ,CAmBH,CArBD,CAuBA,cAAeA,CAAAA,QAAf","sourcesContent":["import React from 'react';\nimport { Row, Col, Card, CardBody, Spinner } from 'reactstrap';\n\nconst colors = ['primary', 'secondary', 'success', 'danger', 'warning', 'info'];\n\n\nconst BorderedSpinners = () => {\n    return (\n        <React.Fragment>\n            <h5 className=\"font-size-15 mb-1\">Border spinner</h5>\n            <p className=\"sub-header\">Use the border spinners for a lightweight loading indicator.</p>\n\n            <div>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" color={color} />;\n                })}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst GrowingSpinners = () => {\n    return (\n        <React.Fragment>\n            <h5 className=\"font-size-15 mb-1\">Growing spinner</h5>\n            <p className=\"sub-header\">If you don’t fancy a border spinner, switch to the grow spinner. While it doesn’t technically spin, it does repeatedly grow!</p>\n\n            <div>\n\n                {colors.map((color, index) => {\n                    return <Spinner key={index} className=\"m-2\" type=\"grow\" color={color} />;\n                })}\n            </div>\n        </React.Fragment>\n    );\n};\n\nconst Spinners = () => {\n\n    return (\n        <React.Fragment>\n            <Card>\n                <CardBody>\n                    <h4 className=\"mb-3 mt-0 header-title\">Spinners</h4>\n\n                    <Row>\n                        <Col xl={6}>\n                            <BorderedSpinners />\n                        </Col>\n\n                        <Col xl={6}>\n                            <GrowingSpinners />\n                        </Col>\n                    </Row>\n                </CardBody>\n            </Card>\n        </React.Fragment>\n    );\n};\n\nexport default Spinners;\n"]},"metadata":{},"sourceType":"module"}